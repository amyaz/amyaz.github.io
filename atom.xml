<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Amyaz的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://amyaz.github.io/"/>
  <updated>2019-05-15T05:15:55.991Z</updated>
  <id>https://amyaz.github.io/</id>
  
  <author>
    <name>Amyaz</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>香橙派自建 NAS 云盘</title>
    <link href="https://amyaz.github.io/posts/2019-05-15-pi-nextcloud.html"/>
    <id>https://amyaz.github.io/posts/2019-05-15-pi-nextcloud.html</id>
    <published>2019-05-15T05:14:39.000Z</published>
    <updated>2019-05-15T05:15:55.991Z</updated>
    
    <content type="html"><![CDATA[<p>购买 Orange Pi Zero 时还买了转接板，可扩展 2 个 USB 接口，刚好手里有 2块淘汰下来的硬盘（各 500G），为充分利用起来，我将使用 <a href="https://dl.armbian.com/orangepizero/Ubuntu_bionic_next.7z" target="_blank" rel="noopener">Armbian Bionic 系统</a> 和 <a href="https://nextcloud.com/" target="_blank" rel="noopener">Nextcloud</a> 搭建 NAS 云盘。</p><p>将 Armbian Bionic 系统烧录到 TF 卡，香橙派通电，用 <code>ssh</code> 访问香橙派，配置好 Armbian 系统。</p><h2 id="挂载硬盘"><a href="#挂载硬盘" class="headerlink" title="挂载硬盘"></a>挂载硬盘</h2><p>使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l</span><br></pre></td></tr></table></figure><p>找到连接的硬盘设备名，因为连接到香橙派的硬盘是唯一的 500G，所以很容易辨别出 <code>/dev/sda</code> 和 <code>/dev/sdb</code> 就是那两个硬盘。</p><p>下面将两个硬盘都格式化为 ext4（操作两次，第二次将 <code>sda</code> 替换为 <code>sdb</code>）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fdisk /dev/sda</span><br><span class="line">&gt; o        //创建分区表</span><br><span class="line">&gt; n        //新建分区</span><br><span class="line">&gt;          //全盘创建一个分区，此四步默认留空</span><br><span class="line">&gt; w        //写入修改</span><br></pre></td></tr></table></figure><a id="more"></a><p>格式化 <code>sda</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4 /dev/sda1</span><br></pre></td></tr></table></figure><p>重复以上步骤后，为两个硬盘建立标签：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">e2label /dev/sda1 data</span><br><span class="line">e2label /dev/sdb1 backup</span><br></pre></td></tr></table></figure><p>使用 autofs 挂载硬盘，首先安装 autofs 并创建挂着点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install autofs</span><br><span class="line">mkdir /nas</span><br></pre></td></tr></table></figure><p>然后添加下面这行到 /etc/auto.master 来挂载设备：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nas    /etc/auto.hdd</span><br></pre></td></tr></table></figure><p>编辑 /etc/auto.hdd：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data -fstype=ext4,rw :/dev/disk/by-label/data</span><br><span class="line">backup -fstype=ext4,rw :/dev/disk/by-label/backup</span><br></pre></td></tr></table></figure><p>并重新启动 autofs 服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service autofs restart</span><br></pre></td></tr></table></figure><p>接下来确认硬盘是否已经挂载成功：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /nas/data</span><br><span class="line">cd /nas/backup</span><br><span class="line">mount</span><br></pre></td></tr></table></figure><h2 id="局域网共享"><a href="#局域网共享" class="headerlink" title="局域网共享"></a>局域网共享</h2><p>存储空间已经准备好了，我想局域网内都可以访问里面的内容，这里使用 Samba ，方便跨平台使用，首先安装 Samba：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install samba</span><br></pre></td></tr></table></figure><p>然后配置 Samba，将 <code>/nas/data</code> 共享：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/samba/smb.conf</span><br></pre></td></tr></table></figure><p>在最末尾添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[data]</span><br><span class="line">   path = /nas/data</span><br><span class="line">   browseable = yes</span><br><span class="line">   writable = yes</span><br><span class="line">   guest ok = yes</span><br></pre></td></tr></table></figure><p>经过上面的配置，局域网内都可以访问数据。</p><h2 id="数据自动备份"><a href="#数据自动备份" class="headerlink" title="数据自动备份"></a>数据自动备份</h2><p>我想每天凌晨 2 点去进行数据备份，每天的备份保留一周，每周的备份文件保留一个月，每个月的备份保留一年，每一年的备份保留五年。</p><p>经过搜索发现， rsnapshot 可以满足我的需求，并使用增量备份来节约空间。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install rsnapshot</span><br></pre></td></tr></table></figure><p>配置 rsnapshot：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/rsnapshot.conf</span><br></pre></td></tr></table></figure><p>修改如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 设置备份目录，所有备份将存放在此</span><br><span class="line">snapshot_root    /nas/backup</span><br><span class="line"># 备份保留时间</span><br><span class="line">retain  daily   7</span><br><span class="line">retain  weekly  4</span><br><span class="line">retain  monthly 12</span><br><span class="line">retain  yearly  5</span><br><span class="line"># 备份点，目录将被备份，并注销不需备份的行</span><br><span class="line">backup  /nas/data    locahost/</span><br></pre></td></tr></table></figure><p>验证 rsnapshot 配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsnapshot configtest</span><br></pre></td></tr></table></figure><p>如果一切配置正确，会收到一个“ Syntax OK”的消息。如果显示任何错误讯息，好好检查你的配置文件。</p><p>接下来，以 daily 为例执行测试运行，以确保正在生成正确的结果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsnapshot -t daily</span><br></pre></td></tr></table></figure><p>将 rsnapshot 加入 cron，使其按时间自动运行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/cron.d/rsnapshot</span><br></pre></td></tr></table></figure><p>配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0  2            * * *           root    /usr/bin/rsnapshot daily</span><br><span class="line">0  3            * * 1           root    /usr/bin/rsnapshot weekly</span><br><span class="line">0  4            1 * *           root    /usr/bin/rsnapshot monthly</span><br><span class="line">0  5            1 1 *           root    /usr/bin/rsnapshot yearly</span><br></pre></td></tr></table></figure><h2 id="安装-Nextcloud"><a href="#安装-Nextcloud" class="headerlink" title="安装 Nextcloud"></a>安装 Nextcloud</h2><p>首先安装依赖包：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install unzip nginx mariadb-server php-fpm php-zip php-mysql php-xml php-mbstring php-gd php-curl php-intl php-imagick php-json php-mcrypt</span><br></pre></td></tr></table></figure><p>然后，下载最新版 Nextcloud。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /nas/data</span><br><span class="line">wget https://download.nextcloud.com/server/releases/latest-15.zip</span><br><span class="line">unzip latest-15.zip</span><br><span class="line">ln -s /nas/data/nextcloud /var/www/nextcloud</span><br><span class="line">chown -R www-data:www-data nextcloud/</span><br></pre></td></tr></table></figure><h2 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h2><p>首先设置密码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure><p>创建数据库 <code>nextcloud</code> 及用户 <code>nextcloud</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line">MariaDB [(none)]&gt; CREATE DATABASE nextcloud;</span><br><span class="line">MariaDB [(none)]&gt; CREATE USER &apos;nextcloud&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;password&apos;;</span><br><span class="line">MariaDB [(none)]&gt; GRANT ALL ON nextcloud.* TO &apos;nextcloud&apos;@&apos;localhost&apos;;</span><br><span class="line">MariaDB [(none)]&gt; FLUSH PRIVILEGES;</span><br><span class="line">MariaDB [(none)]&gt; \q</span><br></pre></td></tr></table></figure><h2 id="Web-服务器配置"><a href="#Web-服务器配置" class="headerlink" title="Web 服务器配置"></a>Web 服务器配置</h2><p>首先生成自签名 SSL 证书：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/nginx/cert/</span><br><span class="line">openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout /etc/nginx/cert/nextcloud.key -out /etc/nginx/cert/nextcloud.crt</span><br></pre></td></tr></table></figure><p>创建 Nextcloud 虚拟主机配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /nas/data/nextcloud.conf</span><br></pre></td></tr></table></figure><p>内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line">upstream php-handler &#123;</span><br><span class="line">    #server 127.0.0.1:9000;</span><br><span class="line">    server unix:/var/run/php/php7.0-fpm.sock;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    listen [::]:80;</span><br><span class="line">    server_name 192.168.1.112;</span><br><span class="line">    # enforce https</span><br><span class="line">    return 301 https://$server_name$request_uri;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl http2;</span><br><span class="line">    listen [::]:443 ssl http2;</span><br><span class="line">    server_name 192.168.1.112;</span><br><span class="line"></span><br><span class="line">    # Use Mozilla&apos;s guidelines for SSL/TLS settings</span><br><span class="line">    # https://mozilla.github.io/server-side-tls/ssl-config-generator/</span><br><span class="line">    # NOTE: some settings below might be redundant</span><br><span class="line">    ssl_certificate /etc/nginx/cert/nextcloud.crt;</span><br><span class="line">    ssl_certificate_key /etc/nginx/cert/nextcloud.key;</span><br><span class="line"></span><br><span class="line">    # Add headers to serve security related headers</span><br><span class="line">    # Before enabling Strict-Transport-Security headers please read into this</span><br><span class="line">    # topic first.</span><br><span class="line">    add_header Strict-Transport-Security &quot;max-age=15768000; includeSubDomains; preload;&quot;;</span><br><span class="line">    #</span><br><span class="line">    # WARNING: Only add the preload option once you read about</span><br><span class="line">    # the consequences in https://hstspreload.org/. This option</span><br><span class="line">    # will add the domain to a hardcoded list that is shipped</span><br><span class="line">    # in all major browsers and getting removed from this list</span><br><span class="line">    # could take several months.</span><br><span class="line">    add_header X-Content-Type-Options nosniff;</span><br><span class="line">    add_header X-XSS-Protection &quot;1; mode=block&quot;;</span><br><span class="line">    add_header X-Robots-Tag none;</span><br><span class="line">    add_header X-Download-Options noopen;</span><br><span class="line">    add_header X-Permitted-Cross-Domain-Policies none;</span><br><span class="line">    add_header Referrer-Policy no-referrer;</span><br><span class="line"></span><br><span class="line">    # Remove X-Powered-By, which is an information leak</span><br><span class="line">    fastcgi_hide_header X-Powered-By;</span><br><span class="line"></span><br><span class="line">    # Path to the root of your installation</span><br><span class="line">    root /var/www/nextcloud/;</span><br><span class="line"></span><br><span class="line">    location = /robots.txt &#123;</span><br><span class="line">        allow all;</span><br><span class="line">        log_not_found off;</span><br><span class="line">        access_log off;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # The following 2 rules are only needed for the user_webfinger app.</span><br><span class="line">    # Uncomment it if you&apos;re planning to use this app.</span><br><span class="line">    #rewrite ^/.well-known/host-meta /public.php?service=host-meta last;</span><br><span class="line">    #rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json last;</span><br><span class="line"></span><br><span class="line">    # The following rule is only needed for the Social app.</span><br><span class="line">    # Uncomment it if you&apos;re planning to use this app.</span><br><span class="line">    # rewrite ^/.well-known/webfinger /public.php?service=webfinger last;</span><br><span class="line"></span><br><span class="line">    location = /.well-known/carddav &#123;</span><br><span class="line">      return 301 $scheme://$host/remote.php/dav;</span><br><span class="line">    &#125;</span><br><span class="line">    location = /.well-known/caldav &#123;</span><br><span class="line">      return 301 $scheme://$host/remote.php/dav;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # set max upload size</span><br><span class="line">    client_max_body_size 512M;</span><br><span class="line">    fastcgi_buffers 64 4K;</span><br><span class="line"></span><br><span class="line">    # Enable gzip but do not remove ETag headers</span><br><span class="line">    gzip on;</span><br><span class="line">    gzip_vary on;</span><br><span class="line">    gzip_comp_level 4;</span><br><span class="line">    gzip_min_length 256;</span><br><span class="line">    gzip_proxied expired no-cache no-store private no_last_modified no_etag auth;</span><br><span class="line">    gzip_types application/atom+xml application/javascript application/json application/ld+json application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy;</span><br><span class="line"></span><br><span class="line">    # Uncomment if your server is build with the ngx_pagespeed module</span><br><span class="line">    # This module is currently not supported.</span><br><span class="line">    #pagespeed off;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        rewrite ^ /index.php$request_uri;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ ^\/(?:build|tests|config|lib|3rdparty|templates|data)\/ &#123;</span><br><span class="line">        deny all;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ ^\/(?:\.|autotest|occ|issue|indie|db_|console) &#123;</span><br><span class="line">        deny all;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ ^\/(?:index|remote|public|cron|core\/ajax\/update|status|ocs\/v[12]|updater\/.+|oc[ms]-provider\/.+)\.php(?:$|\/) &#123;</span><br><span class="line">        fastcgi_split_path_info ^(.+?\.php)(\/.*|)$;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">        fastcgi_param PATH_INFO $fastcgi_path_info;</span><br><span class="line">        fastcgi_param HTTPS on;</span><br><span class="line">        #Avoid sending the security headers twice</span><br><span class="line">        fastcgi_param modHeadersAvailable true;</span><br><span class="line">        fastcgi_param front_controller_active true;</span><br><span class="line">        fastcgi_pass php-handler;</span><br><span class="line">        fastcgi_intercept_errors on;</span><br><span class="line">        fastcgi_request_buffering off;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ ^\/(?:updater|oc[ms]-provider)(?:$|\/) &#123;</span><br><span class="line">        try_files $uri/ =404;</span><br><span class="line">        index index.php;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # Adding the cache control header for js and css files</span><br><span class="line">    # Make sure it is BELOW the PHP block</span><br><span class="line">    location ~ \.(?:css|js|woff2?|svg|gif)$ &#123;</span><br><span class="line">        try_files $uri /index.php$request_uri;</span><br><span class="line">        add_header Cache-Control &quot;public, max-age=15778463&quot;;</span><br><span class="line">        # Add headers to serve security related headers (It is intended to</span><br><span class="line">        # have those duplicated to the ones above)</span><br><span class="line">        # Before enabling Strict-Transport-Security headers please read into</span><br><span class="line">        # this topic first.</span><br><span class="line">        # add_header Strict-Transport-Security &quot;max-age=15768000; includeSubDomains; preload;&quot;;</span><br><span class="line">        #</span><br><span class="line">        # WARNING: Only add the preload option once you read about</span><br><span class="line">        # the consequences in https://hstspreload.org/. This option</span><br><span class="line">        # will add the domain to a hardcoded list that is shipped</span><br><span class="line">        # in all major browsers and getting removed from this list</span><br><span class="line">        # could take several months.</span><br><span class="line">        add_header X-Content-Type-Options nosniff;</span><br><span class="line">        add_header X-XSS-Protection &quot;1; mode=block&quot;;</span><br><span class="line">        add_header X-Robots-Tag none;</span><br><span class="line">        add_header X-Download-Options noopen;</span><br><span class="line">        add_header X-Permitted-Cross-Domain-Policies none;</span><br><span class="line">        add_header Referrer-Policy no-referrer;</span><br><span class="line"></span><br><span class="line">        # Optional: Don&apos;t log access to assets</span><br><span class="line">        access_log off;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ \.(?:png|html|ttf|ico|jpg|jpeg)$ &#123;</span><br><span class="line">        try_files $uri /index.php$request_uri;</span><br><span class="line">        # Optional: Don&apos;t log access to other assets</span><br><span class="line">        access_log off;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试并启用 Nextcloud 虚拟主机：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ln -s /nas/data/nextcloud.conf /etc/nginx/sites-enabled/nextcloud</span><br><span class="line">rm /etc/nginx/sites-enabled/default</span><br><span class="line">nginx -t</span><br><span class="line">systemctl reload nginx</span><br></pre></td></tr></table></figure><p>打开 <a href="http://192.168.1.112" target="_blank" rel="noopener">http://192.168.1.112</a> ，填写管理员用户名、密码\数据库名称、数据库用户名和密码等信息，Nextcloud 云盘搭建成功。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;购买 Orange Pi Zero 时还买了转接板，可扩展 2 个 USB 接口，刚好手里有 2块淘汰下来的硬盘（各 500G），为充分利用起来，我将使用 &lt;a href=&quot;https://dl.armbian.com/orangepizero/Ubuntu_bionic_next.7z&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Armbian Bionic 系统&lt;/a&gt; 和 &lt;a href=&quot;https://nextcloud.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Nextcloud&lt;/a&gt; 搭建 NAS 云盘。&lt;/p&gt;
&lt;p&gt;将 Armbian Bionic 系统烧录到 TF 卡，香橙派通电，用 &lt;code&gt;ssh&lt;/code&gt; 访问香橙派，配置好 Armbian 系统。&lt;/p&gt;
&lt;h2 id=&quot;挂载硬盘&quot;&gt;&lt;a href=&quot;#挂载硬盘&quot; class=&quot;headerlink&quot; title=&quot;挂载硬盘&quot;&gt;&lt;/a&gt;挂载硬盘&lt;/h2&gt;&lt;p&gt;使用&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;fdisk -l&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;找到连接的硬盘设备名，因为连接到香橙派的硬盘是唯一的 500G，所以很容易辨别出 &lt;code&gt;/dev/sda&lt;/code&gt; 和 &lt;code&gt;/dev/sdb&lt;/code&gt; 就是那两个硬盘。&lt;/p&gt;
&lt;p&gt;下面将两个硬盘都格式化为 ext4（操作两次，第二次将 &lt;code&gt;sda&lt;/code&gt; 替换为 &lt;code&gt;sdb&lt;/code&gt;）：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;fdisk /dev/sda&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; o        //创建分区表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; n        //新建分区&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;          //全盘创建一个分区，此四步默认留空&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; w        //写入修改&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Nextcloud" scheme="https://amyaz.github.io/tags/Nextcloud/"/>
    
      <category term="香橙派" scheme="https://amyaz.github.io/tags/%E9%A6%99%E6%A9%99%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>Pi+motion 打造实时视频监控</title>
    <link href="https://amyaz.github.io/posts/2019-04-22-pi-motion.html"/>
    <id>https://amyaz.github.io/posts/2019-04-22-pi-motion.html</id>
    <published>2019-04-22T09:26:54.000Z</published>
    <updated>2019-04-22T09:27:30.185Z</updated>
    
    <content type="html"><![CDATA[<p>要打造实时视频监控，需要：</p><ul><li>Pi 一个</li><li>USB免驱摄像头</li></ul><h2 id="检查摄像头"><a href="#检查摄像头" class="headerlink" title="检查摄像头"></a>检查摄像头</h2><p>插上摄像头，root 登陆 Pi。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /dev/video*</span><br></pre></td></tr></table></figure><p>显示 <code>/dev/video0</code> 即为摄像头的设备名。</p><h2 id="安装配置-motion"><a href="#安装配置-motion" class="headerlink" title="安装配置 motion"></a>安装配置 motion</h2><p>以 Armbian 为例：</p><a id="more"></a><p>安装 motion：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install motion</span><br></pre></td></tr></table></figure><p>配置 motion daemon 守护进程：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/default/motion</span><br></pre></td></tr></table></figure><p>修改 <code>start_motion_daemon=no</code> 为 <code>start_motion_daemon=yes</code>。</p><p>修改 motion 的配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/motion/motion.conf</span><br></pre></td></tr></table></figure><p>将 <code>daemon off</code> 修改为 <code>daemon on</code>；<code>stream_localhost on</code> 修改为 <code>stream_localhost off</code>，即关闭 localhost 限制。</p><p>启动 motion 服务，并设置开机启动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service motion start</span><br><span class="line">update-rc.d motion defaults</span><br></pre></td></tr></table></figure><p>打开浏览器，输入 http://树莓派IP:8081 即可查看拍到的图像。</p><p>注意：<br>Chrome 或者 Firefox 内核的浏览器可以正常访问；Microsoft Edge 和 IE 内核的浏览器不显示图像，而是提示下载。</p><h2 id="远程监控"><a href="#远程监控" class="headerlink" title="远程监控"></a>远程监控</h2><p>移动大内网，无法获取公网 ip，使用 <a href="https://github.com/fatedier/frp" target="_blank" rel="noopener">frp 内网穿透</a> 连接 Pi 实现远程监控。</p><p>由于手头没有公网服务器，只好使用 <a href="https://www.chuantou.org/" target="_blank" rel="noopener">免费FRP穿透服务</a> 。</p><h3 id="安装-frpc"><a href="#安装-frpc" class="headerlink" title="安装 frpc"></a>安装 frpc</h3><p>根据 <a href="https://www.chuantou.org/frp-page" target="_blank" rel="noopener">chuantou.org frp 配置信息</a> ,使用 Frp V0.26 版本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/fatedier/frp/releases/download/v0.26.0/frp_0.26.0_linux_arm.tar.gz</span><br><span class="line">tar -zxvf frp_0.26.0_linux_arm.tar.gz</span><br><span class="line">mv frp_0.26.0_linux_arm /opt/frp</span><br><span class="line">nano /opt/frp/frpc.ini</span><br></pre></td></tr></table></figure><p>修改配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">#server_addr一定要写域名形式，不要直接写IP地址</span><br><span class="line">server_addr = frp1.chuantou.org</span><br><span class="line">server_port = 7000</span><br><span class="line">privilege_token = www.xxorg.com</span><br><span class="line"># 标注你的代理名字，随便选择一个跟别人不一样即可</span><br><span class="line">user = amyaz</span><br><span class="line"></span><br><span class="line">[xxorg]</span><br><span class="line">type = http</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 8081</span><br><span class="line"># 选择一个可用的子域名，你的访问地址将会是http://xxorg.frp1.chuantou.org</span><br><span class="line">subdomain = amyaz</span><br><span class="line"></span><br><span class="line">[tcp3389]</span><br><span class="line">type = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 3389</span><br><span class="line"># TCP/UDP穿透开放端口范围50000-60000，为避免连接失败，记得修改</span><br><span class="line">remote_port = 53389</span><br></pre></td></tr></table></figure><p>登录测试配置成功与否：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/frp/frpc -c /opt/frp/frpc.ini</span><br></pre></td></tr></table></figure><p>没有出现 <code>[E]</code> （错误）就表示成功了。</p><h3 id="frpc-开机启动"><a href="#frpc-开机启动" class="headerlink" title="frpc 开机启动"></a>frpc 开机启动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/rc.local</span><br></pre></td></tr></table></figure><p>在 <code>exit 0</code>上一行加入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/frp/frpc -c /opt/frp/frpc.ini</span><br></pre></td></tr></table></figure><h3 id="motion-安全"><a href="#motion-安全" class="headerlink" title="motion 安全"></a>motion 安全</h3><p>使用密码访问 motion，保护隐私：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/motion/motion.conf</span><br></pre></td></tr></table></figure><p>将 <code>stream_auth_method 0</code> 改为 <code>stream_auth_method 1</code>；去掉 <code>; stream_authentication username:password</code> 前的 <code>;</code>，并将 <code>username:password</code> 改为登陆账号密码。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;要打造实时视频监控，需要：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pi 一个&lt;/li&gt;
&lt;li&gt;USB免驱摄像头&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;检查摄像头&quot;&gt;&lt;a href=&quot;#检查摄像头&quot; class=&quot;headerlink&quot; title=&quot;检查摄像头&quot;&gt;&lt;/a&gt;检查摄像头&lt;/h2&gt;&lt;p&gt;插上摄像头，root 登陆 Pi。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ls /dev/video*&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;显示 &lt;code&gt;/dev/video0&lt;/code&gt; 即为摄像头的设备名。&lt;/p&gt;
&lt;h2 id=&quot;安装配置-motion&quot;&gt;&lt;a href=&quot;#安装配置-motion&quot; class=&quot;headerlink&quot; title=&quot;安装配置 motion&quot;&gt;&lt;/a&gt;安装配置 motion&lt;/h2&gt;&lt;p&gt;以 Armbian 为例：&lt;/p&gt;
    
    </summary>
    
    
      <category term="香橙派" scheme="https://amyaz.github.io/tags/%E9%A6%99%E6%A9%99%E6%B4%BE/"/>
    
      <category term="motion" scheme="https://amyaz.github.io/tags/motion/"/>
    
      <category term="frp" scheme="https://amyaz.github.io/tags/frp/"/>
    
  </entry>
  
  <entry>
    <title>Pi 调整 TF 卡大小</title>
    <link href="https://amyaz.github.io/posts/2019-04-07-pi-resize2fs.html"/>
    <id>https://amyaz.github.io/posts/2019-04-07-pi-resize2fs.html</id>
    <published>2019-04-07T02:19:36.000Z</published>
    <updated>2019-04-07T02:21:29.859Z</updated>
    
    <content type="html"><![CDATA[<p>入手一块 Orange Pi Zero，<del>看重它的性价比</del>（没错，就是穷）。将系统烧录到 TF 卡时，不会使用全部 TF 卡容量，造成浪费。经过一阵搜索，找到调整 TF 卡大小的方法，调大增加使用空间，调小便于保存系统镜像。</p><p><strong><a href="https://www.armbian.com/orange-pi-zero/" target="_blank" rel="noopener">Armbian 系统</a> 会自动扩容全部 TF 卡空间，不需要手动调整。</strong></p><p>将 TF 卡插入电脑，打开 Linux 虚拟机，把 TF 卡添加到 USB 筛选器。（直接把 TF 卡插入 Linux 电脑也可以）在 Linux 终端操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo fdisk -l                    //查看所有存储设备，根据大小确定 TF 卡是 /dev/ 开头的哪个，并可看到分区情况</span><br><span class="line">sudo e2fsck -f /dev/sdb2        //整理第二分区，有的系统只有一个分区，就是 sdb1</span><br><span class="line">sudo resize2fs /dev/sdb2 1G    //调整大小，调小加上 Pi 已占用空间大小（这里为 1G，可在 Pi 下用 df -h 查看），调大不用</span><br><span class="line">sudo fdisk /dev/sdb            //实际调整，小心操作！！！</span><br></pre></td></tr></table></figure><p>进入 fdisk 命令操作，调整容量过程是：先删除第二分区，再新建分区为调整后的大小。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Welcome to fdisk (util-linux 2.29.2).</span><br><span class="line">Changes will remain in memory only, until you decide to write them.</span><br><span class="line">Be careful before using the write command.</span><br><span class="line"></span><br><span class="line">Command (m for help): d</span><br><span class="line">Partition number (1,2, default 2):</span><br><span class="line">Partition 2 has been deleted.</span><br><span class="line"></span><br><span class="line">Command (m for help): n</span><br><span class="line">Partition type</span><br><span class="line">   p   primary (1 primary, 0 extended, 3 free)</span><br><span class="line">   e   extended (container for logical partitions)</span><br><span class="line">Select (default p):</span><br><span class="line">Using default response p.</span><br><span class="line">Partition number (2-4, default 2):</span><br><span class="line">First sector (1026048-31116287, default 1026048):</span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G,T,P&#125; (1026048-31116287, default 31116287): +1G        //调小 +1G，调大留空</span><br><span class="line">Created a new partition 2 of type &apos;Linux&apos; and of size 3 GiB.</span><br><span class="line">Partition #2 contains a ext4 signature.</span><br><span class="line">Do you want to remove the signature? [Y]es/[N]o: n        //一定要填 n，不移除</span><br><span class="line"></span><br><span class="line">Command (m for help): w</span><br><span class="line">The partition table has been altered.</span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line">Syncing disks.</span><br></pre></td></tr></table></figure><p>操作完成，如果调小要保存系统镜像，使用 <a href="http://sourceforge.net/projects/win32diskimager/" target="_blank" rel="noopener">Win32 Disk Imager</a> 读取 TF 卡，记得勾选<em>仅读取已分配分区</em>。</p><p>将保存的系统镜像烧录到新的 TF 卡，可以使用上面的步骤恢复容量。</p><p>当然也可直接在 Pi 上进行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo fdisk -l        //TF 卡在 Pi 上识别为 /dev/mmcblk0</span><br><span class="line">sudo fdisk /dev/mmcblk0</span><br></pre></td></tr></table></figure><p>按上面的操作先删除第二分区再新建，最后会有 <code>WARNING: Re-reading the partition table failed with error 16</code> 这样的提示，没关系，输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><p>重启，输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resize2fs /dev/mmcblk0p2</span><br></pre></td></tr></table></figure><p>使用 <code>df -h</code> 查看，容量已经调整。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;入手一块 Orange Pi Zero，&lt;del&gt;看重它的性价比&lt;/del&gt;（没错，就是穷）。将系统烧录到 TF 卡时，不会使用全部 TF 卡容量，造成浪费。经过一阵搜索，找到调整 TF 卡大小的方法，调大增加使用空间，调小便于保存系统镜像。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;
      
    
    </summary>
    
    
      <category term="香橙派" scheme="https://amyaz.github.io/tags/%E9%A6%99%E6%A9%99%E6%B4%BE/"/>
    
      <category term="扩容" scheme="https://amyaz.github.io/tags/%E6%89%A9%E5%AE%B9/"/>
    
  </entry>
  
  <entry>
    <title>EesyNAS | 使存储更简单</title>
    <link href="https://amyaz.github.io/posts/2018-11-07-easynas.html"/>
    <id>https://amyaz.github.io/posts/2018-11-07-easynas.html</id>
    <published>2018-11-07T12:48:33.000Z</published>
    <updated>2019-06-12T05:49:44.585Z</updated>
    
    <content type="html"><![CDATA[<p>EasyNAS是一个适用于家庭及小型办公环境的存储管理系统。<br>它使用Opensuse的文件系统BTRFS：<br>具有稳定，高性能，高可用和其他你不常见的特性。</p><p>EasyNAS的先进特性包括：支持压缩的文件系统，快照，写复制，实时增加或减少存储空间，均衡磁盘负载，在线文件系统检查。并且支持多种操作系统的网络协议：<br>CIFS, NFS, AFP, FTP, HTTP, SCP, DLNA, TFTP</p><img src="/posts/2018-11-07-easynas/easynas.jpg"><p>我已制作了 EasyNAS 中文包。使用方法：</p><ol><li><a href="http://www.easynas.org/download/" target="_blank" rel="noopener">下载安装 EasyNAS</a>，更新 firmware 到最新版。</li><li>打开 WebGUI，启用 SSH，用你喜欢的 SSH 工具连接到 EasyNAS。</li><li>安装 git，并 clone 本项目：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo zypper ref</span><br><span class="line">sudo zypper in git ca-certificates</span><br><span class="line">git clone https://github.com/amyaz/EasyNAS.git</span><br></pre></td></tr></table></figure></li></ol><p>4.安装中文包：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp EasyNAS/easynas/lang/ /easynas/</span><br></pre></td></tr></table></figure><p>在 WebGUI 中选择 <code>Chinese Simplified</code>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;EasyNAS是一个适用于家庭及小型办公环境的存储管理系统。&lt;br&gt;它使用Opensuse的文件系统BTRFS：&lt;br&gt;具有稳定，高性能，高可用和其他你不常见的特性。&lt;/p&gt;
&lt;p&gt;EasyNAS的先进特性包括：支持压缩的文件系统，快照，写复制，实时增加或减少存储空间，均衡
      
    
    </summary>
    
    
      <category term="NAS" scheme="https://amyaz.github.io/tags/NAS/"/>
    
      <category term="EasyNAS" scheme="https://amyaz.github.io/tags/EasyNAS/"/>
    
  </entry>
  
  <entry>
    <title>OpenMediaVault 另类安装法</title>
    <link href="https://amyaz.github.io/posts/2018-10-28-debian-omv.html"/>
    <id>https://amyaz.github.io/posts/2018-10-28-debian-omv.html</id>
    <published>2018-10-28T06:48:36.000Z</published>
    <updated>2019-06-12T05:48:55.491Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://amyaz.github.io/posts/2018-04-29-openmediavault.html">《使用 OpenMediaVault 轻松搭建家用 NAS》</a> 介绍了使用镜像安装 OMV 的方法，但是这种安装方法会默认安装许多不需要的软件包，略有洁癖的我心里很不舒服。经过一阵折腾，于是就有了在最小化安装 Debian 基础上安装 OMV 的另类安装法。</p><p>OMV 是基于 Debian 的，二者的安装过程基本一致，Debian 9 的安装可以参考<a href="https://amyaz.github.io/posts/2018-04-29-openmediavault.html">这篇文章</a>，本文不再赘述，只是在软件选择时注意只选择 <em>SSH server</em> 。</p><img src="/posts/2018-10-28-debian-omv/20181028143729087_19399.png"><p>安装完成后使用 root 账号、密码登陆。</p><a id="more"></a><img src="/posts/2018-10-28-debian-omv/20181028143849288_17886.png"><p>修改 SSH 服务器配置，允许 root 登陆。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/ssh/sshd_config</span><br><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure><img src="/posts/2018-10-28-debian-omv/20181028143912331_9788.png"><p>查看主机 ip 地址。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip addr show</span><br></pre></td></tr></table></figure><img src="/posts/2018-10-28-debian-omv/20181028143927945_2835.png"><p>局域网内使用 <a href="http://www.mycodes.net/130/681.htm" target="_blank" rel="noopener">PuTTY 中文版</a> 登录 SSH 。</p><img src="/posts/2018-10-28-debian-omv/20181028143942777_13293.png"><img src="/posts/2018-10-28-debian-omv/20181028144005777_24018.png"><p>更改软件源以提高下载速度。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &apos;s/security.debian.org/mirrors.tuna.tsinghua.edu.cn/g&apos; /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>更新系统。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update &amp;&amp; apt -y upgrade</span><br></pre></td></tr></table></figure><p>创建 OMV 4 安装脚本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano omv4.sh</span><br></pre></td></tr></table></figure><p>参照 OpenMediaVault 论坛文章 <a href="http://forum.openmediavault.org/index.php/Thread/21234-Install-OMV4-on-Debian-9-Stretch/" target="_blank" rel="noopener">《Install OMV4 on Debian 9 (Stretch)》</a>，脚本内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt;&gt; /etc/apt/sources.list.d/openmediavault.list</span><br><span class="line">deb http://packages.openmediavault.org/public arrakis main</span><br><span class="line"># deb http://downloads.sourceforge.net/project/openmediavault/packages arrakis main</span><br><span class="line">## Uncomment the following line to add software from the proposed repository.</span><br><span class="line"># deb http://packages.openmediavault.org/public arrakis-proposed main</span><br><span class="line"># deb http://downloads.sourceforge.net/project/openmediavault/packages arrakis-proposed main</span><br><span class="line">## This software is not part of OpenMediaVault, but is offered by third-party</span><br><span class="line">## developers as a service to OpenMediaVault users.</span><br><span class="line"># deb http://packages.openmediavault.org/public arrakis partner</span><br><span class="line"># deb http://downloads.sourceforge.net/project/openmediavault/packages arrakis partner</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">export LANG=C.UTF-8</span><br><span class="line">export DEBIAN_FRONTEND=noninteractive</span><br><span class="line">export APT_LISTCHANGES_FRONTEND=none</span><br><span class="line">wget -O &quot;/etc/apt/trusted.gpg.d/openmediavault-archive-keyring.asc&quot; http://packages.openmediavault.org/public/archive.key</span><br><span class="line">apt-key add &quot;/etc/apt/trusted.gpg.d/openmediavault-archive-keyring.asc&quot;</span><br><span class="line">apt-get update</span><br><span class="line">apt-get --yes --auto-remove --show-upgraded \</span><br><span class="line">--allow-downgrades --allow-change-held-packages \</span><br><span class="line">--no-install-recommends \</span><br><span class="line">--option Dpkg::Options::=&quot;--force-confdef&quot; \</span><br><span class="line">--option DPkg::Options::=&quot;--force-confold&quot; \</span><br><span class="line">install postfix openmediavault-keyring openmediavault</span><br><span class="line"></span><br><span class="line"># Initialize the system and database.</span><br><span class="line">omv-initsystem</span><br><span class="line"></span><br><span class="line"># Rebuild configurations.</span><br><span class="line">omv-mkconf interfaces</span><br><span class="line">omv-mkconf issue</span><br><span class="line"></span><br><span class="line"># Display the login information.</span><br><span class="line">cat /etc/issue</span><br></pre></td></tr></table></figure><p>赋予安装脚本执行权限。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x omv4.sh</span><br></pre></td></tr></table></figure><p>执行安装脚本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./omv4.sh</span><br></pre></td></tr></table></figure><p>完成后，重启。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><p>OMV 系统安装好了。</p><p>如果出现</p><blockquote><p>Exception ignored in:.remove at 0x76125420&gt;Traceback (most recent call last): File “/usr/lib/python3.5/weakref.py”, line 117, in removeTypeError: ‘NoneType’ object is not callableException ignored in:.remove at 0x76125420&gt;<br>Traceback (most recent call last):<br>File “/usr/lib/python3.5/weakref.py”, line 117, in remove<br>TypeError: ‘NoneType’ object is not callable</p></blockquote><p>解决办法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /usr/lib/python3.5/weakref.py</span><br></pre></td></tr></table></figure><p><code>def remove(wr, selfref=ref(self)):</code> 修改为 <code>def remove(wr, selfref=ref(self), _atomic_removal=_remove_dead_weakref):</code></p><p><code>_remove_dead_weakref(d, wr.key)</code> 修改为 <code>_atomic_removal(d, wr.key)</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://amyaz.github.io/posts/2018-04-29-openmediavault.html&quot;&gt;《使用 OpenMediaVault 轻松搭建家用 NAS》&lt;/a&gt; 介绍了使用镜像安装 OMV 的方法，但是这种安装方法会默认安装许多不需要的软件包，略有洁癖的我心里很不舒服。经过一阵折腾，于是就有了在最小化安装 Debian 基础上安装 OMV 的另类安装法。&lt;/p&gt;
&lt;p&gt;OMV 是基于 Debian 的，二者的安装过程基本一致，Debian 9 的安装可以参考&lt;a href=&quot;https://amyaz.github.io/posts/2018-04-29-openmediavault.html&quot;&gt;这篇文章&lt;/a&gt;，本文不再赘述，只是在软件选择时注意只选择 &lt;em&gt;SSH server&lt;/em&gt; 。&lt;/p&gt;
&lt;img src=&quot;/posts/2018-10-28-debian-omv/20181028143729087_19399.png&quot;&gt;

&lt;p&gt;安装完成后使用 root 账号、密码登陆。&lt;/p&gt;
    
    </summary>
    
    
      <category term="OpenMediaVault" scheme="https://amyaz.github.io/tags/OpenMediaVault/"/>
    
      <category term="NAS" scheme="https://amyaz.github.io/tags/NAS/"/>
    
  </entry>
  
  <entry>
    <title>虚拟机安装体验群晖 DSM 系统</title>
    <link href="https://amyaz.github.io/posts/2018-10-13-vbox-dsm.html"/>
    <id>https://amyaz.github.io/posts/2018-10-13-vbox-dsm.html</id>
    <published>2018-10-13T09:24:50.000Z</published>
    <updated>2018-12-29T07:09:16.731Z</updated>
    
    <content type="html"><![CDATA[<p>DiskStation Manager (DSM) 是网页界面的直觉式操作系统，可帮助用户管理存于 Synology DiskStation 和 RackStation 里的文件、照片、音乐、视频以及其他重要内容。具有以下特点：</p><ul><li>简单使用：DSM 提供熟悉的使用者界面；</li><li>高价值：Synology 长期支持，定期的免费更新和新功能；</li><li>多功能：套件中心里能够安装、升级 Synology 或第三方应用程序提供的新功能；</li><li>移动化：Synology 移动应用程序支持 IOS、Android。</li></ul><p>DSM 本来只能安装在群晖（Synology）公司销售的 NAS 设备中，有人认为群晖 NAS 设备价格高、性能低，就破解了 DSM 系统，使其能安装运行在其他非群晖 NAS 设备上，称为黑群晖。</p><p>本文将在 Windows 7 下通过 VirtualBox 虚拟安装体验 DSM 6.1，看看使用效果如何。</p><a id="more"></a><h2 id="虚拟安装-DSM-6-1"><a href="#虚拟安装-DSM-6-1" class="headerlink" title="虚拟安装 DSM 6.1"></a>虚拟安装 DSM 6.1</h2><h3 id="所需软件"><a href="#所需软件" class="headerlink" title="所需软件"></a>所需软件</h3><ul><li><a href="http://files-1252461160.cossh.myqcloud.com/DS3615xs_6.1_Jun%27s_Mod_V1.02b.7z" target="_blank" rel="noopener">DS3615xs 6.1 Jun’s Mod V1.02b</a></li><li><a href="https://archive.synology.com/download/DSM/release/6.1.7/15284/DSM_DS3615xs_15284.pat" target="_blank" rel="noopener">DSM_DS3615xs_15284.pat</a></li></ul><h3 id="虚拟机设置"><a href="#虚拟机设置" class="headerlink" title="虚拟机设置"></a>虚拟机设置</h3><p>openmediavault-virtualbox 插件下参照本文设置。</p><p>首先新建 DSM 虚拟电脑。</p><img src="/posts/2018-10-13-vbox-dsm/20181013165810630_21143.jpg"><p>内存充足可以设置 2048 MB 以上，我的电脑只有 4 GB 内存，就给了 1024 MB。</p><img src="/posts/2018-10-13-vbox-dsm/20181013165832236_28827.jpg"><p>这里先不添加虚拟硬盘。</p><img src="/posts/2018-10-13-vbox-dsm/20181013165846041_21982.jpg"><p>添加 IDE 虚拟盘，使用现有的虚拟盘，选择 synoboot.vmdk 。</p><img src="/posts/2018-10-13-vbox-dsm/20181013165903552_2463.jpg"><p>添加 SCSI 控制器，并创建新的虚拟盘。</p><img src="/posts/2018-10-13-vbox-dsm/20181013165923222_2079.jpg"><img src="/posts/2018-10-13-vbox-dsm/20181013165946351_32166.jpg"><img src="/posts/2018-10-13-vbox-dsm/20181013170740926_14051.jpg"><p>配置网络连接方式为 <em>桥接网卡</em> ，MAC 地址修改为 <code>0011322CA785</code>。</p><img src="/posts/2018-10-13-vbox-dsm/20181013170812314_10611.jpg"><p>openmediavault-virtualbox 插件下要启用远程桌面，Windows 下不用。</p><img src="/posts/2018-10-13-vbox-dsm/20181013170837738_15337.jpg"><p>启动虚拟机，选择启动菜单最后一项。这个界面只有几秒钟，操作要快，否则只能重启来过。</p><img src="/posts/2018-10-13-vbox-dsm/20181013170905008_4814.png"><img src="/posts/2018-10-13-vbox-dsm/20181013170919277_19318.png"><h3 id="安装操作"><a href="#安装操作" class="headerlink" title="安装操作"></a>安装操作</h3><p>浏览器输入 find.synology.com 可以找到 DiskStation，联机，同意许可协议。</p><img src="/posts/2018-10-13-vbox-dsm/20181013171019869_5083.jpg"><p>点 <em>设置</em> 开始安装系统。</p><img src="/posts/2018-10-13-vbox-dsm/20181013171103040_6419.jpg"><p>手动安装已经下载好的 DSM_DS3615xs_15284.pat 。</p><img src="/posts/2018-10-13-vbox-dsm/20181013171125774_9139.jpg"><p>注意，硬盘数据将被删除。</p><img src="/posts/2018-10-13-vbox-dsm/20181013171143867_10686.jpg"><p>安装过程需要几分钟，等待。</p><img src="/posts/2018-10-13-vbox-dsm/20181013171202862_16572.jpg"><p>进行使用前配置，先创建管理员账户。</p><img src="/posts/2018-10-13-vbox-dsm/20181013171223735_15578.jpg"><p>DSM 更新任选一项，我们后面会修改。</p><img src="/posts/2018-10-13-vbox-dsm/20181013171238786_10467.jpg"><p>跳过 QuickConnect 服务，可以使用花生壳等网络服务进行远程访问。</p><img src="/posts/2018-10-13-vbox-dsm/20181013171256759_28842.jpg"><img src="/posts/2018-10-13-vbox-dsm/20181013171342968_22515.jpg"><p>黑群就不要给开发商分析了，跳过。</p><img src="/posts/2018-10-13-vbox-dsm/20181013171603038_10907.jpg"><h2 id="配置-DSM"><a href="#配置-DSM" class="headerlink" title="配置 DSM"></a>配置 DSM</h2><h3 id="更新设置"><a href="#更新设置" class="headerlink" title="更新设置"></a>更新设置</h3><p>浏览器登陆 DSM，打开 <em>控制面板</em> - <em>更新和还原</em>。</p><img src="/posts/2018-10-13-vbox-dsm/20181013171645866_3505.jpg"><p>点 <em>更新设置</em> 选择 <em>仅重要更新</em>，取消选择 <em>自动检查 DSM 更新</em>。（仅在 6.1 版本内更新，不跨版本）</p><img src="/posts/2018-10-13-vbox-dsm/20181013171725774_1950.jpg"><h4 id="12-29-更新"><a href="#12-29-更新" class="headerlink" title="12.29 更新"></a>12.29 更新</h4><p>之前提示更新，都被我忽略了。今天尝试更新，成功了。</p><p>非常简单，只需点击 <em>下载</em> 并安装更新即可。</p><img src="/posts/2018-10-13-vbox-dsm/20181229103429245_4682.jpg"><h3 id="静态-ip-设置"><a href="#静态-ip-设置" class="headerlink" title="静态 ip 设置"></a>静态 ip 设置</h3><p>在控制面板中，对 <em>局域网 1</em> 进行 <em>编辑</em>，使用静态 ip 地址。</p><img src="/posts/2018-10-13-vbox-dsm/20181013171842114_12145.jpg"><img src="/posts/2018-10-13-vbox-dsm/20181013171851374_30806.jpg"><p>以后可以使用 <a href="http://192.168.1.111:5000" target="_blank" rel="noopener">http://192.168.1.111:5000</a> 访问管理 DSM。</p><h2 id="配置存储空间"><a href="#配置存储空间" class="headerlink" title="配置存储空间"></a>配置存储空间</h2><p>这里以配置上面创建的 8 G 的 dsm6.vdi 虚拟硬盘为例，额外增加硬盘按此步骤操作即可。</p><p>打开 <em>存储空间管理员</em>。</p><img src="/posts/2018-10-13-vbox-dsm/20181013171916278_22886.jpg"><p>新增 RAID Group。</p><img src="/posts/2018-10-13-vbox-dsm/20181013171936787_26741.jpg"><img src="/posts/2018-10-13-vbox-dsm/20181013171958704_27003.jpg"><p>单盘选择 <em>Basic</em>，将硬盘拖进 RAID Group。</p><img src="/posts/2018-10-13-vbox-dsm/20181013172017945_19764.jpg"><img src="/posts/2018-10-13-vbox-dsm/20181013172042910_10622.jpg"><p>进行硬盘检查。</p><img src="/posts/2018-10-13-vbox-dsm/20181013172109445_1180.jpg"><p>应用设置。</p><img src="/posts/2018-10-13-vbox-dsm/20181013172125101_22948.jpg"><p>RAID Group 创建成功后新增存储空间。ext4 是 Linux 下的标准文件系统，btrfs 具有更多功能特性，我选择 ext4。</p><img src="/posts/2018-10-13-vbox-dsm/20181013172148683_31532.jpg"><p>最后，到 <em>套件中心</em> 按需安装 <em>Audio Station</em>、<em>Photo Station</em>、<em>Video Station</em> 等应用，并安装相应的手机客户端，DSM 玩转起来。</p><img src="/posts/2018-10-13-vbox-dsm/20181013172220210_28181.jpg">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;DiskStation Manager (DSM) 是网页界面的直觉式操作系统，可帮助用户管理存于 Synology DiskStation 和 RackStation 里的文件、照片、音乐、视频以及其他重要内容。具有以下特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;简单使用：DSM 提供熟悉的使用者界面；&lt;/li&gt;
&lt;li&gt;高价值：Synology 长期支持，定期的免费更新和新功能；&lt;/li&gt;
&lt;li&gt;多功能：套件中心里能够安装、升级 Synology 或第三方应用程序提供的新功能；&lt;/li&gt;
&lt;li&gt;移动化：Synology 移动应用程序支持 IOS、Android。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DSM 本来只能安装在群晖（Synology）公司销售的 NAS 设备中，有人认为群晖 NAS 设备价格高、性能低，就破解了 DSM 系统，使其能安装运行在其他非群晖 NAS 设备上，称为黑群晖。&lt;/p&gt;
&lt;p&gt;本文将在 Windows 7 下通过 VirtualBox 虚拟安装体验 DSM 6.1，看看使用效果如何。&lt;/p&gt;
    
    </summary>
    
    
      <category term="NAS" scheme="https://amyaz.github.io/tags/NAS/"/>
    
      <category term="VirtualBox" scheme="https://amyaz.github.io/tags/VirtualBox/"/>
    
      <category term="群晖" scheme="https://amyaz.github.io/tags/%E7%BE%A4%E6%99%96/"/>
    
  </entry>
  
  <entry>
    <title>VirtualBox 虚拟机体验 OpenWrt 软路由</title>
    <link href="https://amyaz.github.io/posts/2018-09-11-vbox-openwrt.html"/>
    <id>https://amyaz.github.io/posts/2018-09-11-vbox-openwrt.html</id>
    <published>2018-09-11T03:53:24.000Z</published>
    <updated>2019-06-12T05:57:34.138Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>OpenWrt 是一个为嵌入式设备（通常是无线路由器）开发的高扩展度的 GNU/Linux 发行版，拥有强大的网络组件和扩展性，提供了100多个已编译好的软件，而且数量还在不断增加。</p></blockquote><p>在 <a href="https://amyaz.github.io/posts/2018-08-25-omv-virtualbox.html">《OpenMediaVault 插件之 VirtualBox 虚拟机》</a> 中已经介绍了 VirtualBox 插件的安装、使用，下面将介绍如何在 VirtualBox 中安装 OpenWrt ，为 NAS 增加路由器功能。为了实现这个功能，需要新增 1 张网卡。</p><h2 id="OpenWrt-固件"><a href="#OpenWrt-固件" class="headerlink" title="OpenWrt 固件"></a>OpenWrt 固件</h2><h3 id="下载固件"><a href="#下载固件" class="headerlink" title="下载固件"></a>下载固件</h3><p>最简单的方法是到 <a href="http://downloads.openwrt.org/" target="_blank" rel="noopener">http://downloads.openwrt.org/</a> 下载最新稳定版固件，或者是使用第三方制作的固件（如 <a href="http://firmware.koolshare.cn/LEDE_X64_fw867/%E8%99%9A%E6%8B%9F%E6%9C%BA%E8%BD%AC%E7%9B%98%E6%88%96PE%E4%B8%8B%E5%86%99%E7%9B%98%E4%B8%93%E7%94%A8/" target="_blank" rel="noopener">http://firmware.koolshare.cn/LEDE_X64_fw867/%E8%99%9A%E6%8B%9F%E6%9C%BA%E8%BD%AC%E7%9B%98%E6%88%96PE%E4%B8%8B%E5%86%99%E7%9B%98%E4%B8%93%E7%94%A8/</a> ）。</p><p>本文使用的是当前最新稳定版 <a href="http://downloads.openwrt.org/releases/18.06.1/targets/x86/generic/openwrt-18.06.1-x86-generic-combined-ext4.img.gz" target="_blank" rel="noopener">OpenWrt 18.06.1 x86</a>。</p><a id="more"></a><h3 id="转换固件格式"><a href="#转换固件格式" class="headerlink" title="转换固件格式"></a>转换固件格式</h3><p>下载后解压，将解压后的 img 文件复制到 SMB 共享文件夹，使用 VirtualBox 自带的 <code>VBoxManage convertfromraw</code> 命令将固件格式转换为 VirtualBox 支持的 vdi 格式。</p><blockquote><p>VBoxManage convertfromraw 命令将 raw 硬盘镜像转换为 VirtualBox 磁盘镜像（VDI）文件。语法如下：</p><blockquote><p>VBoxManage convertfromraw [–format VDI|VMDK|VHD] <filename> <outputfile></outputfile></filename></p><blockquote><p>format 选择要创建的磁盘镜像格式，默认为VDI。</p></blockquote></blockquote></blockquote><p>使用 openmediavault-shellinbox 插件登陆 SSH，输入以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">df -h        //查看分区挂载情况</span><br><span class="line">cd /srv/dev-disk-by-label-data/Downloads        //进入 SMB 共享文件夹</span><br><span class="line">VBoxManage convertfromraw openwrt-18.06.1-x86-generic-combined-ext4.img openwrt.vdi        //格式转换</span><br><span class="line">chown -R vbox:vboxusers openwrt.vdi        //变更文件所有者</span><br><span class="line">exit        //退出</span><br></pre></td></tr></table></figure><img src="/posts/2018-09-11-vbox-openwrt/20180911114407593_12636.jpg"><p>如果 Windows 系统中已安装 VirtualBox ，也可以在 Windows 下使用 CMD 转换好格式，将转换好的 <code>openwrt.vdi</code> 复制到 SMB 共享文件夹。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /d C:\Program Files\Oracle\VirtualBox</span><br><span class="line">VBoxManage convertfromraw E:\openwrt-18.06.1-x86-generic-combined-ext4.img E:\openwrt.vdi</span><br></pre></td></tr></table></figure><img src="/posts/2018-09-11-vbox-openwrt/20180911114441462_24597.jpg"><h2 id="OpenWrt-安装"><a href="#OpenWrt-安装" class="headerlink" title="OpenWrt 安装"></a>OpenWrt 安装</h2><h3 id="新建虚拟机"><a href="#新建虚拟机" class="headerlink" title="新建虚拟机"></a>新建虚拟机</h3><p>新建 OpenWrt 虚拟电脑，x86（32 位） 固件照下图设置，x86_64（64 位） 固件版本选择 <em>64-bit</em>。</p><img src="/posts/2018-09-11-vbox-openwrt/20180911114500144_20789.jpg"><p>32 位 OpenWrt 有 512 MB 内存足够，甚至可以再减少；64 位可适当增加。</p><img src="/posts/2018-09-11-vbox-openwrt/20180911114514780_23655.jpg"><p>选择刚刚转换好的固件作为虚拟硬盘。</p><img src="/posts/2018-09-11-vbox-openwrt/20180911114528464_17479.jpg"><p>对 OpenWrt 虚拟机进行设置。x86 固件一定要勾选 <em>启用 PAE/NX</em> ，否则无法启用虚拟机。</p><img src="/posts/2018-09-11-vbox-openwrt/20180911114544645_21349.jpg"><p>开启远程桌面，方便后面安装 OpenWrt 。</p><img src="/posts/2018-09-11-vbox-openwrt/20180911114559207_2826.jpg"><p>使用 <em>桥接网卡</em> 方式把主机的 2 张网卡桥接给 OpenWrt 使用，网卡 1 桥接新增加的（千兆）网卡作为 LAN 口，连接交换机或二级路由器供局域网使用。</p><img src="/posts/2018-09-11-vbox-openwrt/20180911114613997_9619.jpg"><p>网卡 2 桥接原有的网卡作为 WAN 口，连接外网。</p><img src="/posts/2018-09-11-vbox-openwrt/20180911114628509_18802.jpg"><h3 id="虚拟安装"><a href="#虚拟安装" class="headerlink" title="虚拟安装"></a>虚拟安装</h3><p>启动虚拟机，使用 <a href="https://www.realvnc.com/en/connect/download/viewer/" target="_blank" rel="noopener">VNC</a> 远程安装 OpenWrt 。</p><img src="/posts/2018-09-11-vbox-openwrt/20180911114641899_6467.jpg"><p>GRUB 引导 OpenWrt 启动，默认即可，不要进行任何操作。</p><img src="/posts/2018-09-11-vbox-openwrt/20180911114701685_25469.png"><p>直到看到类似 “br-lan: link becomes ready” 的信息，按下回车键（Enter）。</p><img src="/posts/2018-09-11-vbox-openwrt/20180911114716092_21435.png"><p>就会显示如下界面。为避免与光猫或上级路由器冲突，需要更改 OpenWrt 的 ip 地址。输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/config/network</span><br></pre></td></tr></table></figure><img src="/posts/2018-09-11-vbox-openwrt/20180911114742093_5169.png"><p>找到 <code>option ipaddr &#39;192.168.1.1&#39;</code>，按下键盘上的 <code>i</code>，进入输入模式，修改该行为 <code>option ipaddr &#39;192.168.2.1&#39;</code>。按 <code>Esc</code> 键，退出输入模式，再输入 <code>:wq</code> 按回车键。</p><img src="/posts/2018-09-11-vbox-openwrt/20180911114802023_30029.png"><p>OpenWrt 安装完成，重启：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h2 id="OpenWrt-设置"><a href="#OpenWrt-设置" class="headerlink" title="OpenWrt 设置"></a>OpenWrt 设置</h2><h3 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h3><p>网卡 1 连接电脑，网卡 2 连接到互联网。浏览器登陆 <a href="http://192.168.2.1" target="_blank" rel="noopener">http://192.168.2.1</a> 进入 OpenWrt 管理页面，并设置 root 密码。</p><img src="/posts/2018-09-11-vbox-openwrt/20180911114830475_4498.jpg"><p>输入两次相同的密码，拉到页面最底部，点 <em>Save &amp; Apply</em> 保存生效。</p><img src="/posts/2018-09-11-vbox-openwrt/20180911114911608_28798.jpg"><h3 id="界面汉化"><a href="#界面汉化" class="headerlink" title="界面汉化"></a>界面汉化</h3><p>进入 <em>Software</em> 管理页面。更换软件源为国内源，将所有 <code>downloads.openwrt.org</code> 替换为 <code>mirrors.tuna.tsinghua.edu.cn/lede</code> 。</p><img src="/posts/2018-09-11-vbox-openwrt/20180911114928104_23650.jpg"><p>更新软件列表。</p><img src="/posts/2018-09-11-vbox-openwrt/20180911115024167_20842.jpg"><p>搜索 <code>luci-i18n-base-zh-cn</code> 和 <code>luci-i18n-firewall-zh-cn</code> 并安装，刷新页面后是中文显示。</p><img src="/posts/2018-09-11-vbox-openwrt/20180911115039328_30140.jpg"><p>这里有许多软件包可以安装来增强软路由功能，以后有时间再介绍。（图是 koolshare 论坛版本的软件中心）</p><img src="/posts/2018-09-11-vbox-openwrt/20180911115054018_31608.jpg">]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;OpenWrt 是一个为嵌入式设备（通常是无线路由器）开发的高扩展度的 GNU/Linux 发行版，拥有强大的网络组件和扩展性，提供了100多个已编译好的软件，而且数量还在不断增加。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 &lt;a href=&quot;https://amyaz.github.io/posts/2018-08-25-omv-virtualbox.html&quot;&gt;《OpenMediaVault 插件之 VirtualBox 虚拟机》&lt;/a&gt; 中已经介绍了 VirtualBox 插件的安装、使用，下面将介绍如何在 VirtualBox 中安装 OpenWrt ，为 NAS 增加路由器功能。为了实现这个功能，需要新增 1 张网卡。&lt;/p&gt;
&lt;h2 id=&quot;OpenWrt-固件&quot;&gt;&lt;a href=&quot;#OpenWrt-固件&quot; class=&quot;headerlink&quot; title=&quot;OpenWrt 固件&quot;&gt;&lt;/a&gt;OpenWrt 固件&lt;/h2&gt;&lt;h3 id=&quot;下载固件&quot;&gt;&lt;a href=&quot;#下载固件&quot; class=&quot;headerlink&quot; title=&quot;下载固件&quot;&gt;&lt;/a&gt;下载固件&lt;/h3&gt;&lt;p&gt;最简单的方法是到 &lt;a href=&quot;http://downloads.openwrt.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://downloads.openwrt.org/&lt;/a&gt; 下载最新稳定版固件，或者是使用第三方制作的固件（如 &lt;a href=&quot;http://firmware.koolshare.cn/LEDE_X64_fw867/%E8%99%9A%E6%8B%9F%E6%9C%BA%E8%BD%AC%E7%9B%98%E6%88%96PE%E4%B8%8B%E5%86%99%E7%9B%98%E4%B8%93%E7%94%A8/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://firmware.koolshare.cn/LEDE_X64_fw867/%E8%99%9A%E6%8B%9F%E6%9C%BA%E8%BD%AC%E7%9B%98%E6%88%96PE%E4%B8%8B%E5%86%99%E7%9B%98%E4%B8%93%E7%94%A8/&lt;/a&gt; ）。&lt;/p&gt;
&lt;p&gt;本文使用的是当前最新稳定版 &lt;a href=&quot;http://downloads.openwrt.org/releases/18.06.1/targets/x86/generic/openwrt-18.06.1-x86-generic-combined-ext4.img.gz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;OpenWrt 18.06.1 x86&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="VirtualBox" scheme="https://amyaz.github.io/tags/VirtualBox/"/>
    
      <category term="OpenWrt" scheme="https://amyaz.github.io/tags/OpenWrt/"/>
    
      <category term="软路由" scheme="https://amyaz.github.io/tags/%E8%BD%AF%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title>OpenMediaVault 插件之 VirtualBox 虚拟机</title>
    <link href="https://amyaz.github.io/posts/2018-08-25-omv-virtualbox.html"/>
    <id>https://amyaz.github.io/posts/2018-08-25-omv-virtualbox.html</id>
    <published>2018-08-25T13:04:13.000Z</published>
    <updated>2018-08-25T13:05:25.599Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>VirtualBox 是一款开源虚拟机软件。它不仅具有丰富的特色，而且性能也很优异！它简单易用，可虚拟的系统包括 Windows、Mac OS X、Linux、OpenBSD、Solaris、IBM OS2 甚至 Android 等操作系统！与同性质的 VMware 及 Virtual PC 比较，VirtualBox 具有功能全、效率高、体积小、资源占用低等优点。</p></blockquote><p>OMV-Extras 提供了 openmediavault-virtualbox 插件来管理 VirtualBox 虚拟机，首先安装插件。</p><img src="/posts/2018-08-25-omv-virtualbox/20180825205217092_25134.jpg"><p>添加共享文件夹 <code>VM</code> 用于存储虚拟机文件。</p><a id="more"></a><img src="/posts/2018-08-25-omv-virtualbox/20180825205316304_10085.jpg"><p>启用 VirtualBox。</p><img src="/posts/2018-08-25-omv-virtualbox/20180825205404592_22920.jpg"><p>点击 <em>phpVirtualBox</em> 打开 phpVirtualBox 登陆管理页面，使用 <code>admin</code> 账号登录，默认密码为 <code>openmediavault</code>。</p><img src="/posts/2018-08-25-omv-virtualbox/20180825205506681_5189.jpg"><p>设置中文显示。</p><img src="/posts/2018-08-25-omv-virtualbox/20180825205544291_31540.jpg"><p>新建的虚拟机可以设置成自动或手动启动两种模式。可以在两个地方设置（如下图）。</p><img src="/posts/2018-08-25-omv-virtualbox/20180825205614356_2252.jpg"><img src="/posts/2018-08-25-omv-virtualbox/20180825205626312_258.jpg"><p>通过对 VirtualBox 虚拟机网络的配置，可以模拟组建出我们想要的网络环境。VirtualBox 中有四种网络连接方式：</p><ul><li>NAT 网络地址转换</li><li>Bridged Adapter 桥接网卡</li><li>Internal 内部网络</li><li>Host-only Adapter 仅主机适配器</li></ul><img src="/posts/2018-08-25-omv-virtualbox/20180825205649704_31150.jpg"><p>这四种连接方式的区别：</p><ul><li>网络地址转换：虚拟机可以访问主机能访问到的所有网络，但是对于主机以及主机网络上的其他机器，虚拟机又是不可见的，甚至主机也访问不到虚拟机。</li><li>桥接网卡：它是通过主机网卡，架设了一座桥，直接连入到网络中了。因此，它使得虚拟机能被分配到与主机同一个网络段中独立的 ip，所有网络功能完全和在网络中的真实机器一样。</li><li>内部网络：虚拟机与外网完全断开，只实现虚拟机于虚拟机之间的内部网络模式。</li><li>仅主机适配器：在主机中模拟出一张专供虚拟机使用的网卡，所有虚拟机都是连接到该网卡上的，我们可以通过设置这张网卡来实现上网及其他很多功能，比如网卡共享、网卡桥接等。</li></ul><img src="/posts/2018-08-25-omv-virtualbox/20180825205703120_31981.png"><p><strong>！！！虚拟机网卡连接方式建议设置为桥接网卡，方便局域网管理。</strong></p><p>VirtualBox 提供 VNC 远程管理虚拟机功能，服务器端口设置为 9000 到 9100 之间的固定数字即可。</p><img src="/posts/2018-08-25-omv-virtualbox/20180825205717748_31273.jpg">]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;VirtualBox 是一款开源虚拟机软件。它不仅具有丰富的特色，而且性能也很优异！它简单易用，可虚拟的系统包括 Windows、Mac OS X、Linux、OpenBSD、Solaris、IBM OS2 甚至 Android 等操作系统！与同性质的 VMware 及 Virtual PC 比较，VirtualBox 具有功能全、效率高、体积小、资源占用低等优点。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;OMV-Extras 提供了 openmediavault-virtualbox 插件来管理 VirtualBox 虚拟机，首先安装插件。&lt;/p&gt;
&lt;img src=&quot;/posts/2018-08-25-omv-virtualbox/20180825205217092_25134.jpg&quot;&gt;

&lt;p&gt;添加共享文件夹 &lt;code&gt;VM&lt;/code&gt; 用于存储虚拟机文件。&lt;/p&gt;
    
    </summary>
    
    
      <category term="OMV插件" scheme="https://amyaz.github.io/tags/OMV%E6%8F%92%E4%BB%B6/"/>
    
      <category term="VirtualBox" scheme="https://amyaz.github.io/tags/VirtualBox/"/>
    
  </entry>
  
  <entry>
    <title>OpenMediaVault+Nextcloud 搭建家庭私有云</title>
    <link href="https://amyaz.github.io/posts/2018-07-25-omv-nextcloud.html"/>
    <id>https://amyaz.github.io/posts/2018-07-25-omv-nextcloud.html</id>
    <published>2018-07-25T09:36:00.000Z</published>
    <updated>2019-06-12T05:56:33.916Z</updated>
    
    <content type="html"><![CDATA[<p>在 OMV 中没有 Nextcloud 插件可用，<a href="https://amyaz.github.io/posts/2018-07-23-omv-lemp.html"> 前文 </a> 已经搭建了网页服务器，稍加改造就可搭建 Nextcloud 私有云服务。</p><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><p>使用 openmediavault-shellinbox 插件登陆 SSH，安装 Nextcloud 服务所需软件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install php-gd php-json php-curl php-mbstring php-intl php-mcrypt php-imagick php-xml php-zip</span><br></pre></td></tr></table></figure><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><p>新建数据库 <code>nextcloud</code> 。</p><a id="more"></a><img src="/posts/2018-07-25-omv-nextcloud/20180725171057802_28784.jpg"><p>添加用户 <code>nextcloud</code> 。</p><img src="/posts/2018-07-25-omv-nextcloud/20180725171138240_1862.jpg"><img src="/posts/2018-07-25-omv-nextcloud/20180725171201126_15454.jpg"><p>赋予 <code>nextcloud</code> 用户 拥有 <code>nextcloud</code> 数据库所有权限。</p><img src="/posts/2018-07-25-omv-nextcloud/20180725171216629_8298.jpg"><h3 id="创建-SSL-证书"><a href="#创建-SSL-证书" class="headerlink" title="创建 SSL 证书"></a>创建 SSL 证书</h3><p>OMV 自带了证书功能，我们创建自签名 SSL 证书即可。</p><img src="/posts/2018-07-25-omv-nextcloud/20180725171512187_31882.jpg"><h2 id="LEMP-改造"><a href="#LEMP-改造" class="headerlink" title="LEMP 改造"></a>LEMP 改造</h2><h3 id="修改-Pool"><a href="#修改-Pool" class="headerlink" title="修改 Pool"></a>修改 Pool</h3><p>在扩展选项中添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">env[PATH] = /usr/local/bin:/usr/bin:/bin</span><br></pre></td></tr></table></figure><img src="/posts/2018-07-25-omv-nextcloud/20180725171534697_8017.jpg"><h3 id="修改-Servers"><a href="#修改-Servers" class="headerlink" title="修改 Servers"></a>修改 Servers</h3><p>开启 SSL，使用前面创建的证书。</p><img src="/posts/2018-07-25-omv-nextcloud/20180725171604734_30161.jpg"><p>扩展选项复制以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">client_max_body_size 10G; # set max upload size</span><br><span class="line">fastcgi_buffers 64 4K;</span><br><span class="line"></span><br><span class="line">rewrite ^/caldav(.*)$ /remote.php/caldav$1 redirect;</span><br><span class="line">rewrite ^/carddav(.*)$ /remote.php/carddav$1 redirect;</span><br><span class="line">rewrite ^/webdav(.*)$ /remote.php/webdav$1 redirect;</span><br><span class="line"></span><br><span class="line">index index.php;</span><br><span class="line">error_page 403 /core/templates/403.php;</span><br><span class="line">error_page 404 /core/templates/404.php;</span><br><span class="line"></span><br><span class="line">location = /robots.txt &#123;</span><br><span class="line">allow all;</span><br><span class="line">log_not_found off;</span><br><span class="line">access_log off;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~ ^/(data|config|\.ht|db_structure\.xml|README) &#123;</span><br><span class="line">deny all;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line"># The following 2 rules are only needed with webfinger</span><br><span class="line">rewrite ^/.well-known/host-meta /public.php?service=host-meta last;</span><br><span class="line">rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json last;</span><br><span class="line"></span><br><span class="line">rewrite ^/.well-known/carddav /remote.php/carddav/ redirect;</span><br><span class="line">rewrite ^/.well-known/caldav /remote.php/caldav/ redirect;</span><br><span class="line"></span><br><span class="line">rewrite ^(/core/doc/[^\/]+/)$ $1/index.html;</span><br><span class="line"></span><br><span class="line">try_files $uri $uri/ index.php;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~ ^(.+?\.php)(/.*)?$ &#123;</span><br><span class="line">try_files $1 = 404;</span><br><span class="line"></span><br><span class="line">include fastcgi_params;</span><br><span class="line">fastcgi_param SCRIPT_FILENAME $document_root$1;</span><br><span class="line">fastcgi_param PATH_INFO $2;</span><br><span class="line">fastcgi_param HTTPS on;</span><br><span class="line">fastcgi_pass $socket;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># Optional: set long EXPIRES header on static assets</span><br><span class="line">location ~* ^.+\.(jpg|jpeg|gif|bmp|ico|png|css|js|swf)$ &#123;</span><br><span class="line">expires 30d;</span><br><span class="line"># Optional: Don’t log access to assets</span><br><span class="line">access_log off;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">add_header Strict-Transport-Security &quot;max-age=15768000; includeSubDomains; preload;&quot;;</span><br></pre></td></tr></table></figure><img src="/posts/2018-07-25-omv-nextcloud/20180725171637921_13667.jpg"><h2 id="Nextcloud-安装"><a href="#Nextcloud-安装" class="headerlink" title="Nextcloud 安装"></a>Nextcloud 安装</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>前往 <a href="https://nextcloud.com/install/#instructions-server" target="_blank" rel="noopener">https://nextcloud.com/install/#instructions-server</a> 下载 Nextcloud 最新版本并解压，<code>amyaz</code> 登陆 SMB ，复制 nextcloud 内的文件到 <code>www</code> 文件夹。</p><img src="/posts/2018-07-25-omv-nextcloud/20180725171706516_22731.jpg"><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>打开 <a href="https://192.168.1.110:443，创建管理员账号，配置数据库，点" target="_blank" rel="noopener">https://192.168.1.110:443，创建管理员账号，配置数据库，点</a> <em>完成安装</em>。</p><img src="/posts/2018-07-25-omv-nextcloud/20180725171733165_1546.jpg"><p>安装完成，进入 Nextcloud 。</p><img src="/posts/2018-07-25-omv-nextcloud/20180725171754873_19027.jpg"><h3 id="安全及设置警告"><a href="#安全及设置警告" class="headerlink" title="安全及设置警告"></a>安全及设置警告</h3><img src="/posts/2018-07-25-omv-nextcloud/20180725171823480_19994.jpg"><p>1.</p><blockquote><p>内存缓存未配置，为了提升使用体验，请尽量配置内存缓存。更多信息请参见文档。</p></blockquote><p>安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install php-apcu memcached php-memcached</span><br></pre></td></tr></table></figure><p>编辑：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /srv/dev-disk-by-label-data/www/config/config.php</span><br></pre></td></tr></table></figure><p>在末尾 <code>);</code> 前添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&apos;memcache.local&apos; =&gt; &apos;\OC\Memcache\APCu&apos;,</span><br><span class="line">&apos;memcache.distributed&apos; =&gt; &apos;\OC\Memcache\Memcached&apos;,</span><br><span class="line">&apos;memcached_servers&apos; =&gt; array(</span><br><span class="line">     array(&apos;localhost&apos;, 11211),</span><br><span class="line">     ),</span><br></pre></td></tr></table></figure><p>2.</p><blockquote><p>PHP 的组件 OPcache 没有正确配置。 为了提供更好的性能，我们建议在 php.ini中使用下列设置：</p></blockquote><p>根据提示修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/php/7.0/fpm/php.ini</span><br></pre></td></tr></table></figure><p>删除提示内所在行行前的 <code>;</code> ，并修改数字。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">opcache.enable=1</span><br><span class="line">opcache.enable_cli=1</span><br><span class="line">opcache.interned_strings_buffer=8</span><br><span class="line">opcache.max_accelerated_files=10000</span><br><span class="line">opcache.memory_consumption=128</span><br><span class="line">opcache.save_comments=1</span><br><span class="line">opcache.revalidate_freq=1</span><br></pre></td></tr></table></figure><p>修改完成，重启服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart php7.0-fpm</span><br><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure><p>刷新 Nextcloud 网页，安全及设置警告消除，所有检查通过。</p><img src="/posts/2018-07-25-omv-nextcloud/20180725171900069_13163.jpg"><h4 id="Nextcloud-15-安全及设置警告"><a href="#Nextcloud-15-安全及设置警告" class="headerlink" title="Nextcloud 15 安全及设置警告"></a>Nextcloud 15 安全及设置警告</h4><p>最近，Nextcloud 升级到了 15 版本，升级后出现新的安全及设置警告。</p><img src="/posts/2018-07-25-omv-nextcloud/20190226114111053_22873.jpg"><p>1.</p><blockquote><p>PHP 内存限制低于建议值 512MB。</p></blockquote><img src="/posts/2018-07-25-omv-nextcloud/20190226114123760_8575.jpg"><p>2.</p><blockquote><p>您当前正在运行 PHP 版本 7.0.33-0+deb9u3。我们建议您尽快在您的发行版支持新版本的时候进行升级，以获得来自 PHP 官方的性能和安全的提升。</p></blockquote><p>debian 源最新的只有 PHP7.0，如果你想折腾，可以参考 <a href="https://www.debian.cn/archives/1543" target="_blank" rel="noopener">https://www.debian.cn/archives/1543</a> 。</p><p>3.</p><blockquote><p>数据库中的一些列由于进行长整型转换而缺失。由于在较大的数据表重改变列类型会耗费一些时间，因此程序没有自动对其更改。您可以通过命令行手动执行 “occ db:convert-filecache-bigint” 命令以应用挂起的更改。该操作需要当整个实例变为离线状态后执行。查阅相关文档以获得更多详情。</p></blockquote><p>openmediavault-shellinbox 登陆 SSH，执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /srv/dev-disk-by-label-data/www/</span><br><span class="line">sudo -u amyaz php occ db:convert-filecache-bigint</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在 OMV 中没有 Nextcloud 插件可用，&lt;a href=&quot;https://amyaz.github.io/posts/2018-07-23-omv-lemp.html&quot;&gt; 前文 &lt;/a&gt; 已经搭建了网页服务器，稍加改造就可搭建 Nextcloud 私有云服务。&lt;/p&gt;
&lt;h2 id=&quot;前期准备&quot;&gt;&lt;a href=&quot;#前期准备&quot; class=&quot;headerlink&quot; title=&quot;前期准备&quot;&gt;&lt;/a&gt;前期准备&lt;/h2&gt;&lt;h3 id=&quot;安装依赖&quot;&gt;&lt;a href=&quot;#安装依赖&quot; class=&quot;headerlink&quot; title=&quot;安装依赖&quot;&gt;&lt;/a&gt;安装依赖&lt;/h3&gt;&lt;p&gt;使用 openmediavault-shellinbox 插件登陆 SSH，安装 Nextcloud 服务所需软件。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;apt update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apt install php-gd php-json php-curl php-mbstring php-intl php-mcrypt php-imagick php-xml php-zip&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;创建数据库&quot;&gt;&lt;a href=&quot;#创建数据库&quot; class=&quot;headerlink&quot; title=&quot;创建数据库&quot;&gt;&lt;/a&gt;创建数据库&lt;/h3&gt;&lt;p&gt;新建数据库 &lt;code&gt;nextcloud&lt;/code&gt; 。&lt;/p&gt;
    
    </summary>
    
    
      <category term="OMV插件" scheme="https://amyaz.github.io/tags/OMV%E6%8F%92%E4%BB%B6/"/>
    
      <category term="Nextcloud" scheme="https://amyaz.github.io/tags/Nextcloud/"/>
    
  </entry>
  
  <entry>
    <title>OpenMediaVault 插件之 Nginx、MySQL 搭建网页服务器</title>
    <link href="https://amyaz.github.io/posts/2018-07-23-omv-lemp.html"/>
    <id>https://amyaz.github.io/posts/2018-07-23-omv-lemp.html</id>
    <published>2018-07-23T06:44:46.000Z</published>
    <updated>2018-07-23T06:49:03.063Z</updated>
    
    <content type="html"><![CDATA[<p>OMV 以其丰富的插件而受到人们的青睐，尤其是 OMV-Extras.org 增加了很多 OMV 原本没有的插件，极大地提高了 OMV 的可玩性。今天将简单介绍如何使用 openmediavault-mysql、openmediavault-nginx 这两个插件来搭建网页服务器。</p><p>首先，在 OMV 的插件中心安装这两个插件。</p><img src="/posts/2018-07-23-omv-lemp/20180723143609972_24616.jpg"><p>添加 php-fpm 池，用已添加的用户 <code>amyaz</code> 管理网络连接。</p><a id="more"></a><img src="/posts/2018-07-23-omv-lemp/20180723143645121_2726.jpg"><p>添加共享文件夹 <code>www</code>，用于存放网站文件。</p><img src="/posts/2018-07-23-omv-lemp/20180723143710516_29998.jpg"><p><code>80</code> 端口已经被 OMV 占用，需要修改。</p><img src="/posts/2018-07-23-omv-lemp/20180723143725660_21722.jpg"><p>选择上面添加 php-fpm 池 <code>www</code>。</p><img src="/posts/2018-07-23-omv-lemp/20180723143744175_9556.jpg"><p>启用 Nginx 服务。</p><img src="/posts/2018-07-23-omv-lemp/20180723143804252_22796.jpg"><p>将 <code>www</code> 文件夹加入到 SMB 共享。</p><img src="/posts/2018-07-23-omv-lemp/20180723143828597_19685.jpg"><p>Windows 下用之前添加的用户 <code>amyaz</code> 登陆网络中的 SMB ，在 <code>www</code> 文件夹中新建 index.php ，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php phpinfo(); ?&gt;</span><br></pre></td></tr></table></figure><p>打开 <a href="http://192.168.1.110:81" target="_blank" rel="noopener">http://192.168.1.110:81</a> ，即可查看 php 信息，网页服务器正常运行。（<strong>成功后记得将 index.php 删除，以免泄露服务器信息。</strong>）</p><p>启用 MySQL 。</p><img src="/posts/2018-07-23-omv-lemp/20180723143943487_7414.jpg"><p>点 <em>重设密码</em> 设置 MySQL 密码。</p><img src="/posts/2018-07-23-omv-lemp/20180723144012762_14787.jpg"><p>点 <em>显示</em> 打开 MySQL 管理页面，现在可以登陆管理数据库。</p><img src="/posts/2018-07-23-omv-lemp/20180723144128106_7036.jpg">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;OMV 以其丰富的插件而受到人们的青睐，尤其是 OMV-Extras.org 增加了很多 OMV 原本没有的插件，极大地提高了 OMV 的可玩性。今天将简单介绍如何使用 openmediavault-mysql、openmediavault-nginx 这两个插件来搭建网页服务器。&lt;/p&gt;
&lt;p&gt;首先，在 OMV 的插件中心安装这两个插件。&lt;/p&gt;
&lt;img src=&quot;/posts/2018-07-23-omv-lemp/20180723143609972_24616.jpg&quot;&gt;

&lt;p&gt;添加 php-fpm 池，用已添加的用户 &lt;code&gt;amyaz&lt;/code&gt; 管理网络连接。&lt;/p&gt;
    
    </summary>
    
    
      <category term="OMV插件" scheme="https://amyaz.github.io/tags/OMV%E6%8F%92%E4%BB%B6/"/>
    
      <category term="Nginx" scheme="https://amyaz.github.io/tags/Nginx/"/>
    
      <category term="MySQL" scheme="https://amyaz.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>OpenMediaVault 插件之 CUPS 打印服务</title>
    <link href="https://amyaz.github.io/posts/2018-05-26-omv-cups.html"/>
    <id>https://amyaz.github.io/posts/2018-05-26-omv-cups.html</id>
    <published>2018-05-26T11:39:03.000Z</published>
    <updated>2018-05-26T11:40:24.143Z</updated>
    
    <content type="html"><![CDATA[<p>如果你手头有台打印机需要使用，而又不想一直开着电脑，这时将打印机接入 NAS 实现局域网打印是个不错的主意。</p><p>我手头有台联想 LJ2200L ，经搜索得知，它与兄弟 HL-2140 的驱动通用。</p><p>首先到 <a href="http://www.openprinting.org/printers" target="_blank" rel="noopener">http://www.openprinting.org/printers</a> 查看你的打印机型号支持情况：</p><ul><li>Perfectly：完全支持 linux 下打印，并且可以使用打印机所有功能和打印分辨率</li><li>Mostly：大部分功能支持 linux 下打印，有一些小缺陷</li><li>Partially：只有部分功能支持 linux 下打印</li></ul><img src="/posts/2018-05-26-omv-cups/20180526192548174_5635.jpg"><p>安装 openmediavault-cups 插件。</p><a id="more"></a><img src="/posts/2018-05-26-omv-cups/20180526192605047_11342.jpg"><p>启用打印机服务。</p><img src="/posts/2018-05-26-omv-cups/20180526192624068_22727.jpg"><p>将打印机接入 NAS ，添加打印机。</p><img src="/posts/2018-05-26-omv-cups/20180526192913788_5982.jpg"><p>如果显示错误，表示打印机不在列表中，可以使用高级管理（Advanced management）添加。</p><img src="/posts/2018-05-26-omv-cups/20180526192947487_26640.jpg"><p>选择本地打印机。</p><img src="/posts/2018-05-26-omv-cups/20180526193005723_30794.jpg"><img src="/posts/2018-05-26-omv-cups/20180526193028010_6416.jpg"><p>继续下一步，选择打印机品牌型号。</p><img src="/posts/2018-05-26-omv-cups/20180526193118152_816.jpg"><p>打印设置，默认。</p><img src="/posts/2018-05-26-omv-cups/20180526193228569_28632.jpg"><p>添加成功，打印测试页。</p><img src="/posts/2018-05-26-omv-cups/20180526193319117_25930.jpg"><p>局域网电脑查看共享，可以使用该打印机。</p><img src="/posts/2018-05-26-omv-cups/20180526193339066_22297.jpg">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果你手头有台打印机需要使用，而又不想一直开着电脑，这时将打印机接入 NAS 实现局域网打印是个不错的主意。&lt;/p&gt;
&lt;p&gt;我手头有台联想 LJ2200L ，经搜索得知，它与兄弟 HL-2140 的驱动通用。&lt;/p&gt;
&lt;p&gt;首先到 &lt;a href=&quot;http://www.openprinting.org/printers&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.openprinting.org/printers&lt;/a&gt; 查看你的打印机型号支持情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Perfectly：完全支持 linux 下打印，并且可以使用打印机所有功能和打印分辨率&lt;/li&gt;
&lt;li&gt;Mostly：大部分功能支持 linux 下打印，有一些小缺陷&lt;/li&gt;
&lt;li&gt;Partially：只有部分功能支持 linux 下打印&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&quot;/posts/2018-05-26-omv-cups/20180526192548174_5635.jpg&quot;&gt;

&lt;p&gt;安装 openmediavault-cups 插件。&lt;/p&gt;
    
    </summary>
    
    
      <category term="OMV插件" scheme="https://amyaz.github.io/tags/OMV%E6%8F%92%E4%BB%B6/"/>
    
      <category term="Linux打印" scheme="https://amyaz.github.io/tags/Linux%E6%89%93%E5%8D%B0/"/>
    
  </entry>
  
  <entry>
    <title>OpenMediaVault 插件之 TransmissionBT 下载</title>
    <link href="https://amyaz.github.io/posts/2018-05-04-omv-bt.html"/>
    <id>https://amyaz.github.io/posts/2018-05-04-omv-bt.html</id>
    <published>2018-05-04T02:27:49.000Z</published>
    <updated>2018-05-04T02:29:25.803Z</updated>
    
    <content type="html"><![CDATA[<p>作为一台 NAS ，下载功能必不可少。OMV-Extras 提供了 TransmissionBT 插件，实现 BT/PT 下载。</p><p>首先，在插件中心安装 openmediavault-transmissionbt 插件。</p><img src="/posts/2018-05-04-omv-bt/20180504101840020_26790.jpg"><p>将共享文件夹 Downloads 作为下载目录。设置 ACL 权限，保证 <code>debian-transmissin</code> 拥有读写权限。</p><a id="more"></a><img src="/posts/2018-05-04-omv-bt/20180504101858599_170.jpg"><p>设置下载保存到 Downloads 。</p><img src="/posts/2018-05-04-omv-bt/20180504101927127_1098.jpg"><p>启用 BitTorrent 下载。</p><img src="/posts/2018-05-04-omv-bt/20180504101957786_6489.jpg"><p>启用 web 管理。</p><img src="/posts/2018-05-04-omv-bt/20180504102023641_15106.jpg"><p>点 <em>Show</em> 打开 Transmission 网页管理界面。</p><img src="/posts/2018-05-04-omv-bt/20180504102102488_27025.jpg"><p>但这个界面不太友好，下面使用 transmission-web-control 美化默认的 WEB 界面。</p><p>安装 openmediavault-shellinbox 并启用。</p><img src="/posts/2018-05-04-omv-bt/20180504102112723_40471.jpg"><img src="/posts/2018-05-04-omv-bt/20180504102122600_18372.jpg"><p>点 <em>Web 客户端</em> 登陆 SSH，再按 <a href="https://github.com/ronggang/transmission-web-control/wiki/Linux-Installation-CN" target="_blank" rel="noopener">wiki</a> 操作即可。</p><img src="/posts/2018-05-04-omv-bt/20180504102133164_20133.jpg"><p>下面就是美化后的界面，是不是亲切了许多？</p><img src="/posts/2018-05-04-omv-bt/20180504102139525_16516.jpg">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作为一台 NAS ，下载功能必不可少。OMV-Extras 提供了 TransmissionBT 插件，实现 BT/PT 下载。&lt;/p&gt;
&lt;p&gt;首先，在插件中心安装 openmediavault-transmissionbt 插件。&lt;/p&gt;
&lt;img src=&quot;/posts/2018-05-04-omv-bt/20180504101840020_26790.jpg&quot;&gt;

&lt;p&gt;将共享文件夹 Downloads 作为下载目录。设置 ACL 权限，保证 &lt;code&gt;debian-transmissin&lt;/code&gt; 拥有读写权限。&lt;/p&gt;
    
    </summary>
    
    
      <category term="OMV插件" scheme="https://amyaz.github.io/tags/OMV%E6%8F%92%E4%BB%B6/"/>
    
      <category term="BT下载" scheme="https://amyaz.github.io/tags/BT%E4%B8%8B%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>使用 OpenMediaVault 轻松搭建家用 NAS</title>
    <link href="https://amyaz.github.io/posts/2018-04-29-openmediavault.html"/>
    <id>https://amyaz.github.io/posts/2018-04-29-openmediavault.html</id>
    <published>2018-04-29T13:35:08.000Z</published>
    <updated>2018-04-29T13:44:34.476Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>OpenMediaVault （以下简称 OMV）是一个基于 Debian 的专用 Linux 发行版，用于构建网络连接存储（NAS）系统。 它提供了一个易于使用的基于 Web 的界面，多语言支持，卷管理，监控和插件系统，以通过 LDAP，Bittorrent 和 iSCSI 功能进行扩展。</p></blockquote><p>下面介绍如何安装配置 OMV，方便快捷地搭建家用 NAS。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="硬件准备"><a href="#硬件准备" class="headerlink" title="硬件准备"></a>硬件准备</h3><ul><li>电脑主机一台，新购置的最好，淘汰的老旧电脑也可以</li><li>硬盘两块以上：一块用于安装 OMV 系统，可选择 8GB 以上的 SSD 硬盘；其他的用于存储数据</li><li>U 盘一个，用于刻录安装镜像，512 MB 以上即可</li><li>良好的网络连接</li></ul><h3 id="系统安装"><a href="#系统安装" class="headerlink" title="系统安装"></a>系统安装</h3><p>前往 <a href="https://sourceforge.net/projects/openmediavault/files/" target="_blank" rel="noopener">https://sourceforge.net/projects/openmediavault/files/</a> 下载最新版安装镜像，用 <a href="https://rufus.ie/" target="_blank" rel="noopener">Rufus</a> 制作安装 U 盘。</p><a id="more"></a><p>将网线插入主机，进入 bios 设置 U 盘启动。把 U 盘接到主机上，重启进入安装界面，基本上都是下一步直接回车（Enter）。</p><img src="/posts/2018-04-29-openmediavault/20180429211955392_7825.png"><p>选择中文安装界面。</p><img src="/posts/2018-04-29-openmediavault/20180429212010066_7005.png"><p>网络配置完后，需要设置 root 登陆的密码，用于后台登陆命令行的操作界面。</p><img src="/posts/2018-04-29-openmediavault/20180429212029675_23769.png"><p>选一个安装系统的磁盘。</p><img src="/posts/2018-04-29-openmediavault/20180429212052566_6098.png"><p>开始安装。</p><img src="/posts/2018-04-29-openmediavault/20180429212110330_3367.png"><p>设置软件源，当然要选离得近、速度快的。代理服务器信息留空。</p><img src="/posts/2018-04-29-openmediavault/20180429212128618_24889.png"><p>开始更新。</p><img src="/posts/2018-04-29-openmediavault/20180429212147536_28351.png"><p>安装完成，拔下安装 U 盘，重启主机。</p><img src="/posts/2018-04-29-openmediavault/20180429212159973_6850.png"><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="修改软件源"><a href="#修改软件源" class="headerlink" title="修改软件源"></a>修改软件源</h3><p>使用 root 账号、密码登陆系统。注意：密码输入不会有任何显示。记住主机 ip 地址。</p><img src="/posts/2018-04-29-openmediavault/20180429212218485_24126.png"><p>更改软件源提高下载速度。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &apos;s/security.debian.org/mirrors.tuna.tsinghua.edu.cn/g&apos; /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>更新系统，并重启。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">omv-update</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="修改管理密码"><a href="#修改管理密码" class="headerlink" title="修改管理密码"></a>修改管理密码</h3><p>在局域网中用浏览器访问 ip（我的是 <a href="http://192.168.1.106）到" target="_blank" rel="noopener">http://192.168.1.106）到</a> web 管理界面。</p><img src="/posts/2018-04-29-openmediavault/20180429212244839_23987.jpg"><p>OMV 默认登陆密码是 <code>openmediavault</code> ，为保安全，更改密码。</p><img src="/posts/2018-04-29-openmediavault/20180429212258755_2990.jpg"><h3 id="设置静态-ip"><a href="#设置静态-ip" class="headerlink" title="设置静态 ip"></a>设置静态 ip</h3><p>使用静态 ip ，方便 OMV 管理。</p><img src="/posts/2018-04-29-openmediavault/20180429212308688_9921.jpg"><p>更改了配置，记得要 <em>应用</em> 生效。</p><img src="/posts/2018-04-29-openmediavault/20180429212320475_20129.jpg"><p>以后，打开 <a href="http://192.168.1.110" target="_blank" rel="noopener">http://192.168.1.110</a> 就可以登陆管理 OMV 了。</p><h3 id="更新系统"><a href="#更新系统" class="headerlink" title="更新系统"></a>更新系统</h3><p>定期检查更新，保障系统安全稳定。我前面已经使用 <code>omv-update</code> 更新了系统，这里没有更新。</p><img src="/posts/2018-04-29-openmediavault/20180429212339412_13970.jpg"><h3 id="磁盘挂载"><a href="#磁盘挂载" class="headerlink" title="磁盘挂载"></a>磁盘挂载</h3><p>关机状态下把其他硬盘安装到主机上，建议把除系统盘外的其他硬盘都擦除一遍（注意磁盘所有数据将被删除）。</p><img src="/posts/2018-04-29-openmediavault/20180429212548408_829.jpg"><p>旧硬盘可选 <em>安全</em> ，会低格硬盘，排除磁盘错误，但耗时很长。新硬盘选择 <em>快速</em> 即可。</p><img src="/posts/2018-04-29-openmediavault/20180429212605284_32674.jpg"><p>家用推荐组 RAID-5，但要求 3 块以上硬盘。</p><img src="/posts/2018-04-29-openmediavault/20180429212622911_13724.jpg"><p>RAID 初始化完成，创建文件系统。EXT4 是 Linux 下的标准文件系统，如无特殊需要，默认选择即可。</p><img src="/posts/2018-04-29-openmediavault/20180429212657603_19868.jpg"><p>文件系统创建后点击 <em>挂载</em>，挂载成功后如图所示。</p><img src="/posts/2018-04-29-openmediavault/20180429212725297_31241.jpg"><h3 id="SMB-共享"><a href="#SMB-共享" class="headerlink" title="SMB 共享"></a>SMB 共享</h3><p>添加新用户访问 SMB 共享。</p><img src="/posts/2018-04-29-openmediavault/20180429212735308_29906.jpg"><p>添加共享文件夹，用于下载、共享使用。</p><img src="/posts/2018-04-29-openmediavault/20180429212754978_3823.jpg"><p>启用 SMB 共享服务。</p><img src="/posts/2018-04-29-openmediavault/20180429212814027_21099.jpg"><p>将上面添加的共享文件夹添加到 SMB 共享。</p><img src="/posts/2018-04-29-openmediavault/20180429212836380_6565.jpg"><p>现在可以在 Windows 网络中访问共享了。</p><img src="/posts/2018-04-29-openmediavault/20180429212847029_725.jpg"><h3 id="第三方插件"><a href="#第三方插件" class="headerlink" title="第三方插件"></a>第三方插件</h3><blockquote><p>OMV-Extras.org 为 OMV 提供更多插件支持，可增加第三方源，及安装 SystemRescueCD、Clonezilla 和 Gparted-Live 启动支持。</p></blockquote><p><a href="http://omv-extras.org/openmediavault-omvextrasorg_latest_all4.deb" target="_blank" rel="noopener">下载 OMV-Extras 插件</a> 并上传。</p><img src="/posts/2018-04-29-openmediavault/20180429213137443_17143.jpg"><p>找到 omvextras 插件并安装，在左侧树形菜单里会出现 <em>OMV-Extras</em> 菜单。</p><img src="/posts/2018-04-29-openmediavault/20180429213213772_20483.jpg"><p>点击 <em>检查</em>，可以看到新增加许多插件可供安装使用。</p><img src="/posts/2018-04-29-openmediavault/20180429213238788_21651.jpg"><p>更多插件的使用，后面慢慢介绍。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;OpenMediaVault （以下简称 OMV）是一个基于 Debian 的专用 Linux 发行版，用于构建网络连接存储（NAS）系统。 它提供了一个易于使用的基于 Web 的界面，多语言支持，卷管理，监控和插件系统，以通过 LDAP，Bittorrent 和 iSCSI 功能进行扩展。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下面介绍如何安装配置 OMV，方便快捷地搭建家用 NAS。&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;h3 id=&quot;硬件准备&quot;&gt;&lt;a href=&quot;#硬件准备&quot; class=&quot;headerlink&quot; title=&quot;硬件准备&quot;&gt;&lt;/a&gt;硬件准备&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;电脑主机一台，新购置的最好，淘汰的老旧电脑也可以&lt;/li&gt;
&lt;li&gt;硬盘两块以上：一块用于安装 OMV 系统，可选择 8GB 以上的 SSD 硬盘；其他的用于存储数据&lt;/li&gt;
&lt;li&gt;U 盘一个，用于刻录安装镜像，512 MB 以上即可&lt;/li&gt;
&lt;li&gt;良好的网络连接&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;系统安装&quot;&gt;&lt;a href=&quot;#系统安装&quot; class=&quot;headerlink&quot; title=&quot;系统安装&quot;&gt;&lt;/a&gt;系统安装&lt;/h3&gt;&lt;p&gt;前往 &lt;a href=&quot;https://sourceforge.net/projects/openmediavault/files/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://sourceforge.net/projects/openmediavault/files/&lt;/a&gt; 下载最新版安装镜像，用 &lt;a href=&quot;https://rufus.ie/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Rufus&lt;/a&gt; 制作安装 U 盘。&lt;/p&gt;
    
    </summary>
    
    
      <category term="OpenMediaVault" scheme="https://amyaz.github.io/tags/OpenMediaVault/"/>
    
      <category term="NAS" scheme="https://amyaz.github.io/tags/NAS/"/>
    
  </entry>
  
  <entry>
    <title>你好，全世界</title>
    <link href="https://amyaz.github.io/posts/2018-04-08-hello-world.html"/>
    <id>https://amyaz.github.io/posts/2018-04-08-hello-world.html</id>
    <published>2018-04-08T03:12:01.000Z</published>
    <updated>2019-06-12T05:55:38.442Z</updated>
    
    <content type="html"><![CDATA[<p>欢迎来到<a href="https://amyaz.github.io"> amyaz 的博客</a>！这是我的第一篇文章。经过将近一天的摸索尝试，这个博客终于面世了。下面，我将本博客的搭建过程记录于此。当然，你在<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener"> 《hexo 文档》</a>会获得更详尽的信息。</p><h2 id="配置系统环境"><a href="#配置系统环境" class="headerlink" title="配置系统环境"></a>配置系统环境</h2><h3 id="安装-git"><a href="#安装-git" class="headerlink" title="安装 git"></a>安装 git</h3><p>前往 <a href="https://www.git-scm.com/download/win" target="_blank" rel="noopener">https://www.git-scm.com/download/win</a> ，选择 Git for Windows Portable (“thumbdrive edition”)  对应版本下载，解压到 D 盘。</p><img src="/posts/2018-04-08-hello-world/20180408100247865_25135.jpg" title="32or64"><p>进入 git 文件夹，打开 git-bash 输入（以下操作都是在 git-bash 输入）：</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><p>输出版本号，说明 git 可以使用。</p><h3 id="安装-node-js"><a href="#安装-node-js" class="headerlink" title="安装 node.js"></a>安装 node.js</h3><p>前往 <a href="https://nodejs.org/zh-cn/download/" target="_blank" rel="noopener">https://nodejs.org/zh-cn/download/</a> ，根据系统选择下载 32 位或 64 位 Windows 二进制包（.zip），将其解压到 D 盘。</p><p>设置环境变量，将 node 所在目录增加到系统变量的 Path 中。</p><img src="/posts/2018-04-08-hello-world/20180408100315062_12175.jpg" title="Path image"><p>检查一下配置是否成功：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>输出版本号表示配置成功。</p><h3 id="安装-hexo"><a href="#安装-hexo" class="headerlink" title="安装 hexo"></a>安装 hexo</h3><p>选择 npm 源：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install -g nrm --registry=https://registry.npm.taobao.org</span><br><span class="line">nrm ls                //查看可选源</span><br><span class="line">nrm test              //测试速度</span><br><span class="line">nrm use taobao        //选择最快的源</span><br></pre></td></tr></table></figure><p>安装 hexo 并查看版本号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo</span><br><span class="line">hexo -v</span><br></pre></td></tr></table></figure><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><p>创建文件夹放置博客文件（以 D:\blog 文件夹为例），输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir /d/blog/</span><br><span class="line">cd /d/blog/</span><br><span class="line">hexo init</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>用浏览器打开 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> ，能看到 hexo 的英文博客说明成功。但这个博客样式不是我喜欢的，幸好网上有大量的 hexo 主题可供选择。正如你所看到的，我的博客使用的是<a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener"> Yilia 主题</a> 。</p><h2 id="使用-Yilia-主题"><a href="#使用-Yilia-主题" class="headerlink" title="使用 Yilia 主题"></a>使用 Yilia 主题</h2><p>Yilia 是为 hexo 2.4+ 制作的主题，崇尚简约优雅，以及极致的性能。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /d/blog/</span><br><span class="line">git submodule add https://github.com/amyaz/hexo-theme-yilia.git themes/yilia</span><br></pre></td></tr></table></figure><p>Yilia 主题需要安装以下插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-json-content --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>使用 Notepad++ 打开 D:\blog\ _config.yml ，在 <code>## Plugins: https://hexo.io/plugins/</code> 下增加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">plugins: hexo-generate-feed</span><br><span class="line">jsonContent:</span><br><span class="line">  meta: false</span><br><span class="line">  pages: false</span><br><span class="line">  posts:</span><br><span class="line">    title: true</span><br><span class="line">    date: true</span><br><span class="line">    path: true</span><br><span class="line">    text: false</span><br><span class="line">    raw: false</span><br><span class="line">    content: false</span><br><span class="line">    slug: false</span><br><span class="line">    updated: false</span><br><span class="line">    comments: false</span><br><span class="line">    link: false</span><br><span class="line">    permalink: false</span><br><span class="line">    excerpt: false</span><br><span class="line">    categories: false</span><br><span class="line">    tags: true</span><br></pre></td></tr></table></figure><p>并将 <code>theme: landscape</code> 修改为 <code>theme: yilia</code> 。</p><p>主题配置好了，下面查看效果。输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>打开浏览器访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 。<br>至此，本地搭建博客完成。下面要将博客上传到空间供公众浏览。</p><h2 id="部署网络博客"><a href="#部署网络博客" class="headerlink" title="部署网络博客"></a>部署网络博客</h2><h3 id="创建-github-项目"><a href="#创建-github-项目" class="headerlink" title="创建 github 项目"></a>创建 github 项目</h3><p>到 <a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a> 注册账号，登陆。<br>点击页面右上角 + 号 <em>New repository</em>，<em>Repository name</em> 一栏填上 <code>amyaz.github.io</code> （amyaz 是我的用户名，你得填自己注册的 github 用户名，下同）,其他不管，点 <em>Create repository</em>。设置 git 的用户信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;amyaz&quot;</span><br><span class="line">git config --global user.email &quot;amyaz@qq.com&quot;</span><br></pre></td></tr></table></figure><p>生成并部署密钥（<a href="https://help.github.com/en/articles/connecting-to-github-with-ssh" target="_blank" rel="noopener">帮助文档</a>）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C &quot;amyaz@qq.com&quot;</span><br><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>将输出的内容添加到 <a href="https://github.com/settings/keys" target="_blank" rel="noopener">https://github.com/settings/keys</a> 。<br>添加后输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>输出 “Hi amyaz! You’ve successfully authenticated, but GitHub does not provide shell access.”，添加成功。</p><h3 id="上传博客到-github"><a href="#上传博客到-github" class="headerlink" title="上传博客到 github"></a>上传博客到 github</h3><p>使用 Notepad++ 打开 D:\blog\ _config.yml ，找到 <code># Deployment</code> 段，修改如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:amyaz/amyaz.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>部署博客到 github ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>登陆 github 网站，可以看到博客已经部署到项目当中。</p><p>打开 <a href="https://amyaz.github.io">https://amyaz.github.io</a> ，一个用 hexo 搭建的博客就这样诞生了！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;欢迎来到&lt;a href=&quot;https://amyaz.github.io&quot;&gt; amyaz 的博客&lt;/a&gt;！这是我的第一篇文章。经过将近一天的摸索尝试，这个博客终于面世了。下面，我将本博客的搭建过程记录于此。当然，你在&lt;a href=&quot;https://hexo.io/zh-cn/docs/index.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt; 《hexo 文档》&lt;/a&gt;会获得更详尽的信息。&lt;/p&gt;
&lt;h2 id=&quot;配置系统环境&quot;&gt;&lt;a href=&quot;#配置系统环境&quot; class=&quot;headerlink&quot; title=&quot;配置系统环境&quot;&gt;&lt;/a&gt;配置系统环境&lt;/h2&gt;&lt;h3 id=&quot;安装-git&quot;&gt;&lt;a href=&quot;#安装-git&quot; class=&quot;headerlink&quot; title=&quot;安装 git&quot;&gt;&lt;/a&gt;安装 git&lt;/h3&gt;&lt;p&gt;前往 &lt;a href=&quot;https://www.git-scm.com/download/win&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.git-scm.com/download/win&lt;/a&gt; ，选择 Git for Windows Portable (“thumbdrive edition”)  对应版本下载，解压到 D 盘。&lt;/p&gt;
&lt;img src=&quot;/posts/2018-04-08-hello-world/20180408100247865_25135.jpg&quot; title=&quot;32or64&quot;&gt;

&lt;p&gt;进入 git 文件夹，打开 git-bash 输入（以下操作都是在 git-bash 输入）：&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
